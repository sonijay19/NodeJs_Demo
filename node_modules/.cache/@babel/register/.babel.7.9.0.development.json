{
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/app.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _httpErrors = _interopRequireDefault(require(\"http-errors\"));\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _path = require(\"path\");\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); // view engine setup\n\napp.set('views', (0, _path.join)(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.use((0, _morgan[\"default\"])('dev'));\napp.use((0, _express.json)());\napp.use((0, _express.urlencoded)({\n  extended: false\n}));\napp.use((0, _cookieParser[\"default\"])());\napp.use(_express[\"default\"][\"static\"]((0, _path.join)(__dirname, 'public')));\napp.use('/jay', _index[\"default\"]);\napp.use('/users', _users[\"default\"]); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  next((0, _httpErrors[\"default\"])(404));\n}); // error handler\n\napp.use(function (err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page\n\n  res.status(err.status || 500);\n  res.render('error');\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJfX2Rpcm5hbWUiLCJ1c2UiLCJleHRlbmRlZCIsImV4cHJlc3MiLCJpbmRleFJvdXRlciIsInVzZXJzUm91dGVyIiwicmVxIiwicmVzIiwibmV4dCIsImVyciIsImxvY2FscyIsIm1lc3NhZ2UiLCJlcnJvciIsImdldCIsInN0YXR1cyIsInJlbmRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsSUFBSUEsR0FBRyxHQUFHLDBCQUFWLEMsQ0FFQTs7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQixnQkFBS0MsU0FBTCxFQUFnQixPQUFoQixDQUFqQjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLEtBQXZCO0FBRUFELEdBQUcsQ0FBQ0csR0FBSixDQUFRLHdCQUFPLEtBQVAsQ0FBUjtBQUNBSCxHQUFHLENBQUNHLEdBQUosQ0FBUSxvQkFBUjtBQUNBSCxHQUFHLENBQUNHLEdBQUosQ0FBUSx5QkFBVztBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFYLENBQVI7QUFDQUosR0FBRyxDQUFDRyxHQUFKLENBQVEsK0JBQVI7QUFDQUgsR0FBRyxDQUFDRyxHQUFKLENBQVFFLDhCQUFlLGdCQUFLSCxTQUFMLEVBQWdCLFFBQWhCLENBQWYsQ0FBUjtBQUVBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxNQUFSLEVBQWdCRyxpQkFBaEI7QUFDQU4sR0FBRyxDQUFDRyxHQUFKLENBQVEsUUFBUixFQUFrQkksaUJBQWxCLEUsQ0FFQTs7QUFDQVAsR0FBRyxDQUFDRyxHQUFKLENBQVEsVUFBU0ssR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUMvQkEsRUFBQUEsSUFBSSxDQUFDLDRCQUFZLEdBQVosQ0FBRCxDQUFKO0FBQ0QsQ0FGRCxFLENBSUE7O0FBQ0FWLEdBQUcsQ0FBQ0csR0FBSixDQUFRLFVBQVNRLEdBQVQsRUFBY0gsR0FBZCxFQUFtQkMsR0FBbkIsRUFBd0JDLElBQXhCLEVBQThCO0FBQ3BDO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxPQUFYLEdBQXFCRixHQUFHLENBQUNFLE9BQXpCO0FBQ0FKLEVBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXRSxLQUFYLEdBQW1CTixHQUFHLENBQUNSLEdBQUosQ0FBUWUsR0FBUixDQUFZLEtBQVosTUFBdUIsYUFBdkIsR0FBdUNKLEdBQXZDLEdBQTZDLEVBQWhFLENBSG9DLENBS3BDOztBQUNBRixFQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBV0wsR0FBRyxDQUFDSyxNQUFKLElBQWMsR0FBekI7QUFDQVAsRUFBQUEsR0FBRyxDQUFDUSxNQUFKLENBQVcsT0FBWDtBQUNELENBUkQ7ZUFXZWpCLEciLCJzb3VyY2VSb290IjoiL2hvbWUvamF5L0hhY2thdGhvbl8yazIwL05vZGVKcy9Ob2RlSnNfRGVtby8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlRXJyb3IgZnJvbSAnaHR0cC1lcnJvcnMnO1xuaW1wb3J0IGV4cHJlc3MsIHsganNvbiwgdXJsZW5jb2RlZCB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xuaW1wb3J0IGNvb2tpZVBhcnNlciBmcm9tICdjb29raWUtcGFyc2VyJztcbmltcG9ydCBsb2dnZXIgZnJvbSAnbW9yZ2FuJztcblxuXG5pbXBvcnQgaW5kZXhSb3V0ZXIgZnJvbSAnLi9yb3V0ZXMvaW5kZXgnO1xuaW1wb3J0IHVzZXJzUm91dGVyIGZyb20gJy4vcm91dGVzL3VzZXJzJztcblxudmFyIGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gdmlldyBlbmdpbmUgc2V0dXBcbmFwcC5zZXQoJ3ZpZXdzJywgam9pbihfX2Rpcm5hbWUsICd2aWV3cycpKTtcbmFwcC5zZXQoJ3ZpZXcgZW5naW5lJywgJ2VqcycpO1xuXG5hcHAudXNlKGxvZ2dlcignZGV2JykpO1xuYXBwLnVzZShqc29uKCkpO1xuYXBwLnVzZSh1cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhqb2luKF9fZGlybmFtZSwgJ3B1YmxpYycpKSk7XG5cbmFwcC51c2UoJy9qYXknLCBpbmRleFJvdXRlcik7XG5hcHAudXNlKCcvdXNlcnMnLCB1c2Vyc1JvdXRlcik7XG5cbi8vIGNhdGNoIDQwNCBhbmQgZm9yd2FyZCB0byBlcnJvciBoYW5kbGVyXG5hcHAudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIG5leHQoY3JlYXRlRXJyb3IoNDA0KSk7XG59KTtcblxuLy8gZXJyb3IgaGFuZGxlclxuYXBwLnVzZShmdW5jdGlvbihlcnIsIHJlcSwgcmVzLCBuZXh0KSB7XG4gIC8vIHNldCBsb2NhbHMsIG9ubHkgcHJvdmlkaW5nIGVycm9yIGluIGRldmVsb3BtZW50XG4gIHJlcy5sb2NhbHMubWVzc2FnZSA9IGVyci5tZXNzYWdlO1xuICByZXMubG9jYWxzLmVycm9yID0gcmVxLmFwcC5nZXQoJ2VudicpID09PSAnZGV2ZWxvcG1lbnQnID8gZXJyIDoge307XG5cbiAgLy8gcmVuZGVyIHRoZSBlcnJvciBwYWdlXG4gIHJlcy5zdGF0dXMoZXJyLnN0YXR1cyB8fCA1MDApO1xuICByZXMucmVuZGVyKCdlcnJvcicpO1xufSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "set",
        "__dirname",
        "use",
        "extended",
        "express",
        "indexRouter",
        "usersRouter",
        "req",
        "res",
        "next",
        "err",
        "locals",
        "message",
        "error",
        "get",
        "status",
        "render"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;;;;;;;AAEA,IAAIA,GAAG,GAAG,0BAAV,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiB,gBAAKC,SAAL,EAAgB,OAAhB,CAAjB;AACAF,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AAEAD,GAAG,CAACG,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,oBAAR;AACAH,GAAG,CAACG,GAAJ,CAAQ,yBAAW;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAX,CAAR;AACAJ,GAAG,CAACG,GAAJ,CAAQ,+BAAR;AACAH,GAAG,CAACG,GAAJ,CAAQE,8BAAe,gBAAKH,SAAL,EAAgB,QAAhB,CAAf,CAAR;AAEAF,GAAG,CAACG,GAAJ,CAAQ,MAAR,EAAgBG,iBAAhB;AACAN,GAAG,CAACG,GAAJ,CAAQ,QAAR,EAAkBI,iBAAlB,E,CAEA;;AACAP,GAAG,CAACG,GAAJ,CAAQ,UAASK,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAC/BA,EAAAA,IAAI,CAAC,4BAAY,GAAZ,CAAD,CAAJ;AACD,CAFD,E,CAIA;;AACAV,GAAG,CAACG,GAAJ,CAAQ,UAASQ,GAAT,EAAcH,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8B;AACpC;AACAD,EAAAA,GAAG,CAACG,MAAJ,CAAWC,OAAX,GAAqBF,GAAG,CAACE,OAAzB;AACAJ,EAAAA,GAAG,CAACG,MAAJ,CAAWE,KAAX,GAAmBN,GAAG,CAACR,GAAJ,CAAQe,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCJ,GAAvC,GAA6C,EAAhE,CAHoC,CAKpC;;AACAF,EAAAA,GAAG,CAACO,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;AACAP,EAAAA,GAAG,CAACQ,MAAJ,CAAW,OAAX;AACD,CARD;eAWejB,G",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/",
      "sourcesContent": [
        "import createError from 'http-errors';\nimport express, { json, urlencoded } from 'express';\nimport { join } from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\n\n\nimport indexRouter from './routes/index';\nimport usersRouter from './routes/users';\n\nvar app = express();\n\n// view engine setup\napp.set('views', join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\napp.use(logger('dev'));\napp.use(json());\napp.use(urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(join(__dirname, 'public')));\n\napp.use('/jay', indexRouter);\napp.use('/users', usersRouter);\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585818250160
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _bodyParser = require(\"body-parser\");\n\nvar _InfoAll = require(\"../src/models/InfoAll\");\n\nvar _login = _interopRequireDefault(require(\"./login\"));\n\nvar _register = _interopRequireDefault(require(\"./register\"));\n\nvar _add = _interopRequireDefault(require(\"./add\"));\n\nvar _history = require(\"../src/models/history\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])();\nvar router = (0, _express.Router)();\nrouter.use((0, _bodyParser.json)());\nrouter.use((0, _bodyParser.urlencoded)({\n  extended: true\n}));\nrouter.use((0, _expressSession[\"default\"])({\n  'secret': 'jay',\n  saveUninitialized: true,\n  resave: true\n}));\n/* GET home page. */\n\nrouter.get('/', function (req, res, next) {\n  if (req.session.email) {\n    console.log(req.session.email);\n    res.redirect('/jay/welcome');\n  }\n\n  res.render('Home/home');\n});\n/* => Login routers  */\n\nrouter.use('/login', _login[\"default\"]);\n/* => Add The history */\n\nrouter.use('/add', _add[\"default\"]);\n/* Logout session or logout */\n\nrouter.all('/logout', function (req, res) {\n  req.session.destroy(function (err) {\n    res.header('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n\n    if (err) {\n      return console.log(err);\n    }\n\n    res.redirect('/jay');\n  });\n});\n/* => Register routers */\n\nrouter.use('/reg', _register[\"default\"]);\n/* Welcome or Dashboard route */\n\nrouter.all('/welcome', function (req, res, next) {\n  if (req.session.email) {\n    res.render('Welcome/Doctor/dashboard');\n  } else {\n    res.redirect('/jay');\n  }\n});\n/* Display The History */\n\nrouter.all('/history', function (req, res, next) {\n  if (req.session.email) {\n    var id = '9426980359';\n\n    _history.Pati_History.findById({\n      _id: id\n    }).exec(function (err, Pati_History) {\n      res.render('Welcome/history', {\n        'Pat_his': Pati_History\n      });\n    });\n  } else {\n    res.redirect('/jay');\n  }\n});\n/*  */\n\nrouter.all('/docuser', function (req, res, next) {\n  if (req.session.email) {\n    res.render('Welcome/Doctor/docuser');\n  } else {\n    res.redirect('/jay');\n  }\n});\n/*  */\n\nrouter.all('/patient', function (req, res, next) {\n  if (req.session.email) {\n    res.render('Welcome/Doctor/patient');\n  } else {\n    res.redirect('/jay');\n  }\n});\n/*  */\n\nrouter.all('/table', function (req, res, next) {\n  if (req.session.email) {\n    res.render('Welcome/Doctor/table');\n  } else {\n    res.redirect('/jay');\n  }\n});\n/*  */\n\nrouter.all('/history', function (req, res, next) {\n  if (req.session.email) {\n    res.render('Welcome/Doctor/history');\n  } else {\n    res.redirect('/jay');\n  }\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInJvdXRlciIsInVzZSIsImV4dGVuZGVkIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJyZXNhdmUiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0Iiwic2Vzc2lvbiIsImVtYWlsIiwiY29uc29sZSIsImxvZyIsInJlZGlyZWN0IiwicmVuZGVyIiwibG9naW5yb3V0ZXMiLCJhZGRyb3V0ZXJzIiwiYWxsIiwiZGVzdHJveSIsImVyciIsImhlYWRlciIsInJlZ3JvdXRlcyIsImlkIiwiUGF0aV9IaXN0b3J5IiwiZmluZEJ5SWQiLCJfaWQiLCJleGVjIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFQQSxJQUFJQSxHQUFHLEdBQUcsMEJBQVY7QUFDQSxJQUFJQyxNQUFNLEdBQUcsc0JBQWI7QUFRQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsdUJBQVg7QUFDQUQsTUFBTSxDQUFDQyxHQUFQLENBQVcsNEJBQVc7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBWCxDQUFYO0FBQ0FGLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGdDQUFRO0FBQUMsWUFBUyxLQUFWO0FBQWdCRSxFQUFBQSxpQkFBaUIsRUFBQyxJQUFsQztBQUF1Q0MsRUFBQUEsTUFBTSxFQUFDO0FBQTlDLENBQVIsQ0FBWDtBQUdBOztBQUNBSixNQUFNLENBQUNLLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ2xDLE1BQUdGLEdBQUcsQ0FBQ0csT0FBSixDQUFZQyxLQUFmLEVBQXFCO0FBQ25CQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sR0FBRyxDQUFDRyxPQUFKLENBQVlDLEtBQXhCO0FBQ0FILElBQUFBLEdBQUcsQ0FBQ00sUUFBSixDQUFhLGNBQWI7QUFDRDs7QUFDRE4sRUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsV0FBWDtBQUNELENBTkQ7QUFRQTs7QUFDQWQsTUFBTSxDQUFDQyxHQUFQLENBQVcsUUFBWCxFQUFvQmMsaUJBQXBCO0FBRUE7O0FBQ0FmLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JlLGVBQWxCO0FBRUE7O0FBQ0FoQixNQUFNLENBQUNpQixHQUFQLENBQVcsU0FBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBVztBQUMvQkQsRUFBQUEsR0FBRyxDQUFDRyxPQUFKLENBQVlTLE9BQVosQ0FBb0IsVUFBQ0MsR0FBRCxFQUFPO0FBQ3pCWixJQUFBQSxHQUFHLENBQUNhLE1BQUosQ0FBVyxlQUFYLEVBQTRCLDhDQUE1Qjs7QUFDQSxRQUFHRCxHQUFILEVBQU87QUFDTCxhQUFPUixPQUFPLENBQUNDLEdBQVIsQ0FBWU8sR0FBWixDQUFQO0FBQ0Q7O0FBQ0RaLElBQUFBLEdBQUcsQ0FBQ00sUUFBSixDQUFhLE1BQWI7QUFDRCxHQU5EO0FBT0QsQ0FSRDtBQVVBOztBQUNBYixNQUFNLENBQUNDLEdBQVAsQ0FBVyxNQUFYLEVBQWtCb0Isb0JBQWxCO0FBRUE7O0FBQ0FyQixNQUFNLENBQUNpQixHQUFQLENBQVcsVUFBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUN0QyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQkgsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsMEJBQVg7QUFDRCxHQUZELE1BRUs7QUFDSFAsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FORDtBQVFBOztBQUNBYixNQUFNLENBQUNpQixHQUFQLENBQVcsVUFBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFnQjtBQUNwQyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQixRQUFJWSxFQUFFLEdBQUcsWUFBVDs7QUFDQUMsMEJBQWFDLFFBQWIsQ0FBc0I7QUFBQ0MsTUFBQUEsR0FBRyxFQUFDSDtBQUFMLEtBQXRCLEVBQ0NJLElBREQsQ0FDTSxVQUFDUCxHQUFELEVBQUtJLFlBQUwsRUFBb0I7QUFDeEJoQixNQUFBQSxHQUFHLENBQUNPLE1BQUosQ0FBVyxpQkFBWCxFQUE2QjtBQUFDLG1CQUFVUztBQUFYLE9BQTdCO0FBQ0QsS0FIRDtBQUlELEdBTkQsTUFNSztBQUNIaEIsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FWRDtBQVlBOztBQUNBYixNQUFNLENBQUNpQixHQUFQLENBQVcsVUFBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUN0QyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQkgsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsd0JBQVg7QUFDRCxHQUZELE1BRUs7QUFDSFAsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FORDtBQVFBOztBQUNBYixNQUFNLENBQUNpQixHQUFQLENBQVcsVUFBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUN0QyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQkgsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsd0JBQVg7QUFDRCxHQUZELE1BRUs7QUFDSFAsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FORDtBQVFBOztBQUNBYixNQUFNLENBQUNpQixHQUFQLENBQVcsUUFBWCxFQUFvQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUNwQyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQkgsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsc0JBQVg7QUFDRCxHQUZELE1BRUs7QUFDSFAsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FORDtBQVFBOztBQUNBYixNQUFNLENBQUNpQixHQUFQLENBQVcsVUFBWCxFQUFzQixVQUFDWCxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUN0QyxNQUFHRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsS0FBZixFQUFxQjtBQUNuQkgsSUFBQUEsR0FBRyxDQUFDTyxNQUFKLENBQVcsd0JBQVg7QUFDRCxHQUZELE1BRUs7QUFDSFAsSUFBQUEsR0FBRyxDQUFDTSxRQUFKLENBQWEsTUFBYjtBQUNEO0FBQ0YsQ0FORDtlQVNlYixNIiwic291cmNlUm9vdCI6Ii9ob21lL2pheS9IYWNrYXRob25fMmsyMC9Ob2RlSnMvTm9kZUpzX0RlbW8vcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcbmxldCBhcHAgPSBleHByZXNzKCk7XG5sZXQgcm91dGVyID0gUm91dGVyKCk7XG5pbXBvcnQgeyBqc29uLCB1cmxlbmNvZGVkIH0gZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IHsgUmVnQ2hlbSwgUmVnRG9jLCBSZWdMYWJDaGVtIH0gZnJvbSAnLi4vc3JjL21vZGVscy9JbmZvQWxsJztcbmltcG9ydCBsb2dpbnJvdXRlcyBmcm9tICcuL2xvZ2luJztcbmltcG9ydCByZWdyb3V0ZXMgZnJvbSAnLi9yZWdpc3Rlcic7XG5pbXBvcnQgYWRkcm91dGVycyBmcm9tICcuL2FkZCc7XG5pbXBvcnQge1BhdGlfSGlzdG9yeX0gZnJvbSAnLi4vc3JjL21vZGVscy9oaXN0b3J5Jztcblxucm91dGVyLnVzZShqc29uKCkpO1xucm91dGVyLnVzZSh1cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xucm91dGVyLnVzZShzZXNzaW9uKHsnc2VjcmV0JzonamF5JyxzYXZlVW5pbml0aWFsaXplZDp0cnVlLHJlc2F2ZTp0cnVlfSkpO1xuXG5cbi8qIEdFVCBob21lIHBhZ2UuICovXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIGlmKHJlcS5zZXNzaW9uLmVtYWlsKXtcbiAgICBjb25zb2xlLmxvZyhyZXEuc2Vzc2lvbi5lbWFpbCk7XG4gICAgcmVzLnJlZGlyZWN0KCcvamF5L3dlbGNvbWUnKTtcbiAgfVxuICByZXMucmVuZGVyKCdIb21lL2hvbWUnKTtcbn0pO1xuXG4vKiA9PiBMb2dpbiByb3V0ZXJzICAqL1xucm91dGVyLnVzZSgnL2xvZ2luJyxsb2dpbnJvdXRlcyk7XG5cbi8qID0+IEFkZCBUaGUgaGlzdG9yeSAqL1xucm91dGVyLnVzZSgnL2FkZCcsYWRkcm91dGVycyk7XG5cbi8qIExvZ291dCBzZXNzaW9uIG9yIGxvZ291dCAqL1xucm91dGVyLmFsbCgnL2xvZ291dCcsIChyZXEscmVzKT0+e1xuICByZXEuc2Vzc2lvbi5kZXN0cm95KChlcnIpPT57XG4gICAgcmVzLmhlYWRlcignQ2FjaGUtQ29udHJvbCcsICdwcml2YXRlLCBuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZScpO1xuICAgIGlmKGVycil7XG4gICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTtcbiAgICB9XG4gICAgcmVzLnJlZGlyZWN0KCcvamF5Jyk7XG4gIH0pXG59KVxuXG4vKiA9PiBSZWdpc3RlciByb3V0ZXJzICovXG5yb3V0ZXIudXNlKCcvcmVnJyxyZWdyb3V0ZXMpO1xuXG4vKiBXZWxjb21lIG9yIERhc2hib2FyZCByb3V0ZSAqL1xucm91dGVyLmFsbCgnL3dlbGNvbWUnLChyZXEscmVzLG5leHQpID0+IHtcbiAgaWYocmVxLnNlc3Npb24uZW1haWwpe1xuICAgIHJlcy5yZW5kZXIoJ1dlbGNvbWUvRG9jdG9yL2Rhc2hib2FyZCcpO1xuICB9ZWxzZXtcbiAgICByZXMucmVkaXJlY3QoJy9qYXknKTtcbiAgfVxufSk7XG5cbi8qIERpc3BsYXkgVGhlIEhpc3RvcnkgKi9cbnJvdXRlci5hbGwoJy9oaXN0b3J5JywocmVxLHJlcyxuZXh0KT0+e1xuICBpZihyZXEuc2Vzc2lvbi5lbWFpbCl7XG4gICAgbGV0IGlkID0gJzk0MjY5ODAzNTknO1xuICAgIFBhdGlfSGlzdG9yeS5maW5kQnlJZCh7X2lkOmlkfSlcbiAgICAuZXhlYygoZXJyLFBhdGlfSGlzdG9yeSk9PntcbiAgICAgIHJlcy5yZW5kZXIoJ1dlbGNvbWUvaGlzdG9yeScseydQYXRfaGlzJzpQYXRpX0hpc3Rvcnl9KTtcbiAgICB9KTtcbiAgfWVsc2V7XG4gICAgcmVzLnJlZGlyZWN0KCcvamF5Jyk7XG4gIH1cbn0pO1xuXG4vKiAgKi9cbnJvdXRlci5hbGwoJy9kb2N1c2VyJywocmVxLHJlcyxuZXh0KSA9PiB7XG4gIGlmKHJlcS5zZXNzaW9uLmVtYWlsKXtcbiAgICByZXMucmVuZGVyKCdXZWxjb21lL0RvY3Rvci9kb2N1c2VyJyk7XG4gIH1lbHNle1xuICAgIHJlcy5yZWRpcmVjdCgnL2pheScpO1xuICB9XG59KTtcblxuLyogICovXG5yb3V0ZXIuYWxsKCcvcGF0aWVudCcsKHJlcSxyZXMsbmV4dCkgPT4ge1xuICBpZihyZXEuc2Vzc2lvbi5lbWFpbCl7XG4gICAgcmVzLnJlbmRlcignV2VsY29tZS9Eb2N0b3IvcGF0aWVudCcpO1xuICB9ZWxzZXtcbiAgICByZXMucmVkaXJlY3QoJy9qYXknKTtcbiAgfVxufSk7XG5cbi8qICAqL1xucm91dGVyLmFsbCgnL3RhYmxlJywocmVxLHJlcyxuZXh0KSA9PiB7XG4gIGlmKHJlcS5zZXNzaW9uLmVtYWlsKXtcbiAgICByZXMucmVuZGVyKCdXZWxjb21lL0RvY3Rvci90YWJsZScpO1xuICB9ZWxzZXtcbiAgICByZXMucmVkaXJlY3QoJy9qYXknKTtcbiAgfVxufSk7XG5cbi8qICAqL1xucm91dGVyLmFsbCgnL2hpc3RvcnknLChyZXEscmVzLG5leHQpID0+IHtcbiAgaWYocmVxLnNlc3Npb24uZW1haWwpe1xuICAgIHJlcy5yZW5kZXIoJ1dlbGNvbWUvRG9jdG9yL2hpc3RvcnknKTtcbiAgfWVsc2V7XG4gICAgcmVzLnJlZGlyZWN0KCcvamF5Jyk7XG4gIH1cbn0pO1xuXG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "router",
        "use",
        "extended",
        "saveUninitialized",
        "resave",
        "get",
        "req",
        "res",
        "next",
        "session",
        "email",
        "console",
        "log",
        "redirect",
        "render",
        "loginroutes",
        "addrouters",
        "all",
        "destroy",
        "err",
        "header",
        "regroutes",
        "id",
        "Pati_History",
        "findById",
        "_id",
        "exec"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAPA,IAAIA,GAAG,GAAG,0BAAV;AACA,IAAIC,MAAM,GAAG,sBAAb;AAQAA,MAAM,CAACC,GAAP,CAAW,uBAAX;AACAD,MAAM,CAACC,GAAP,CAAW,4BAAW;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAX,CAAX;AACAF,MAAM,CAACC,GAAP,CAAW,gCAAQ;AAAC,YAAS,KAAV;AAAgBE,EAAAA,iBAAiB,EAAC,IAAlC;AAAuCC,EAAAA,MAAM,EAAC;AAA9C,CAAR,CAAX;AAGA;;AACAJ,MAAM,CAACK,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,OAAJ,CAAYC,KAAxB;AACAH,IAAAA,GAAG,CAACM,QAAJ,CAAa,cAAb;AACD;;AACDN,EAAAA,GAAG,CAACO,MAAJ,CAAW,WAAX;AACD,CAND;AAQA;;AACAd,MAAM,CAACC,GAAP,CAAW,QAAX,EAAoBc,iBAApB;AAEA;;AACAf,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBe,eAAlB;AAEA;;AACAhB,MAAM,CAACiB,GAAP,CAAW,SAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAAW;AAC/BD,EAAAA,GAAG,CAACG,OAAJ,CAAYS,OAAZ,CAAoB,UAACC,GAAD,EAAO;AACzBZ,IAAAA,GAAG,CAACa,MAAJ,CAAW,eAAX,EAA4B,8CAA5B;;AACA,QAAGD,GAAH,EAAO;AACL,aAAOR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAAP;AACD;;AACDZ,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD,GAND;AAOD,CARD;AAUA;;AACAb,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBoB,oBAAlB;AAEA;;AACArB,MAAM,CAACiB,GAAP,CAAW,UAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBH,IAAAA,GAAG,CAACO,MAAJ,CAAW,0BAAX;AACD,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAND;AAQA;;AACAb,MAAM,CAACiB,GAAP,CAAW,UAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACpC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnB,QAAIY,EAAE,GAAG,YAAT;;AACAC,0BAAaC,QAAb,CAAsB;AAACC,MAAAA,GAAG,EAACH;AAAL,KAAtB,EACCI,IADD,CACM,UAACP,GAAD,EAAKI,YAAL,EAAoB;AACxBhB,MAAAA,GAAG,CAACO,MAAJ,CAAW,iBAAX,EAA6B;AAAC,mBAAUS;AAAX,OAA7B;AACD,KAHD;AAID,GAND,MAMK;AACHhB,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAVD;AAYA;;AACAb,MAAM,CAACiB,GAAP,CAAW,UAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBH,IAAAA,GAAG,CAACO,MAAJ,CAAW,wBAAX;AACD,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAND;AAQA;;AACAb,MAAM,CAACiB,GAAP,CAAW,UAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBH,IAAAA,GAAG,CAACO,MAAJ,CAAW,wBAAX;AACD,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAND;AAQA;;AACAb,MAAM,CAACiB,GAAP,CAAW,QAAX,EAAoB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACpC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBH,IAAAA,GAAG,CAACO,MAAJ,CAAW,sBAAX;AACD,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAND;AAQA;;AACAb,MAAM,CAACiB,GAAP,CAAW,UAAX,EAAsB,UAACX,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAGF,GAAG,CAACG,OAAJ,CAAYC,KAAf,EAAqB;AACnBH,IAAAA,GAAG,CAACO,MAAJ,CAAW,wBAAX;AACD,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACM,QAAJ,CAAa,MAAb;AACD;AACF,CAND;eASeb,M",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "sourcesContent": [
        "import express, { Router } from 'express';\nimport session from 'express-session';\nlet app = express();\nlet router = Router();\nimport { json, urlencoded } from 'body-parser';\nimport { RegChem, RegDoc, RegLabChem } from '../src/models/InfoAll';\nimport loginroutes from './login';\nimport regroutes from './register';\nimport addrouters from './add';\nimport {Pati_History} from '../src/models/history';\n\nrouter.use(json());\nrouter.use(urlencoded({ extended: true }));\nrouter.use(session({'secret':'jay',saveUninitialized:true,resave:true}));\n\n\n/* GET home page. */\nrouter.get('/', (req, res, next) => {\n  if(req.session.email){\n    console.log(req.session.email);\n    res.redirect('/jay/welcome');\n  }\n  res.render('Home/home');\n});\n\n/* => Login routers  */\nrouter.use('/login',loginroutes);\n\n/* => Add The history */\nrouter.use('/add',addrouters);\n\n/* Logout session or logout */\nrouter.all('/logout', (req,res)=>{\n  req.session.destroy((err)=>{\n    res.header('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n    if(err){\n      return console.log(err);\n    }\n    res.redirect('/jay');\n  })\n})\n\n/* => Register routers */\nrouter.use('/reg',regroutes);\n\n/* Welcome or Dashboard route */\nrouter.all('/welcome',(req,res,next) => {\n  if(req.session.email){\n    res.render('Welcome/Doctor/dashboard');\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n/* Display The History */\nrouter.all('/history',(req,res,next)=>{\n  if(req.session.email){\n    let id = '9426980359';\n    Pati_History.findById({_id:id})\n    .exec((err,Pati_History)=>{\n      res.render('Welcome/history',{'Pat_his':Pati_History});\n    });\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n/*  */\nrouter.all('/docuser',(req,res,next) => {\n  if(req.session.email){\n    res.render('Welcome/Doctor/docuser');\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n/*  */\nrouter.all('/patient',(req,res,next) => {\n  if(req.session.email){\n    res.render('Welcome/Doctor/patient');\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n/*  */\nrouter.all('/table',(req,res,next) => {\n  if(req.session.email){\n    res.render('Welcome/Doctor/table');\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n/*  */\nrouter.all('/history',(req,res,next) => {\n  if(req.session.email){\n    res.render('Welcome/Doctor/history');\n  }else{\n    res.redirect('/jay');\n  }\n});\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585813711563
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/InfoAll.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/InfoAll.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/InfoAll.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/InfoAll.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
        "sourceFileName": "InfoAll.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\n(0, _mongoose.connect)('mongodb://localhost:27017/Information', {\n  useNewUrlParser: true\n}).then(function () {\n  return console.log('Now connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('something going wrong', err);\n});\nvar RegdocSchema = new _mongoose.Schema({\n  _id: String,\n  drName: String,\n  drmobNo: String,\n  drPassword: String,\n  drLicense: String,\n  drCity: String,\n  drPincode: String,\n  domain: String\n});\nvar RagchemSchema = new _mongoose.Schema({\n  _id: String,\n  cName: String,\n  cmobNo: String,\n  cAddress: String,\n  cCity: String,\n  cPincode: String,\n  cPassword: String,\n  domain: String\n});\nvar RegLabChemSchema = new _mongoose.Schema({\n  _id: String,\n  lName: String,\n  lmobNo: String,\n  lLicense: String,\n  lAddress: String,\n  lCity: String,\n  lPincode: String,\n  lPassword: String,\n  domain: String\n});\nvar PatInfoSchema = new _mongoose.Schema({\n  _id: String,\n  pName: String,\n  pGender: String,\n  pDate: String,\n  pEmail: String,\n  pAddress: String,\n  pCity: String,\n  pState: String,\n  pPincode: String,\n  domain: String,\n  pHeight: String,\n  pWeight: String,\n  pBlood: String\n});\nvar RegChem = (0, _mongoose.model)('RegChem', RagchemSchema);\nvar RegDoc = (0, _mongoose.model)('RegDoc', RegdocSchema);\nvar RegLabChem = (0, _mongoose.model)('RegLabChem', RegLabChemSchema);\nvar PatInfo = (0, _mongoose.model)('PatInfo', PatInfoSchema);\nvar _default = {\n  RegChem: RegChem,\n  RegDoc: RegDoc,\n  RegLabChem: RegLabChem,\n  PatInfo: PatInfo\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkluZm9BbGwuanMiXSwibmFtZXMiOlsidXNlTmV3VXJsUGFyc2VyIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJlcnJvciIsIlJlZ2RvY1NjaGVtYSIsIlNjaGVtYSIsIl9pZCIsIlN0cmluZyIsImRyTmFtZSIsImRybW9iTm8iLCJkclBhc3N3b3JkIiwiZHJMaWNlbnNlIiwiZHJDaXR5IiwiZHJQaW5jb2RlIiwiZG9tYWluIiwiUmFnY2hlbVNjaGVtYSIsImNOYW1lIiwiY21vYk5vIiwiY0FkZHJlc3MiLCJjQ2l0eSIsImNQaW5jb2RlIiwiY1Bhc3N3b3JkIiwiUmVnTGFiQ2hlbVNjaGVtYSIsImxOYW1lIiwibG1vYk5vIiwibExpY2Vuc2UiLCJsQWRkcmVzcyIsImxDaXR5IiwibFBpbmNvZGUiLCJsUGFzc3dvcmQiLCJQYXRJbmZvU2NoZW1hIiwicE5hbWUiLCJwR2VuZGVyIiwicERhdGUiLCJwRW1haWwiLCJwQWRkcmVzcyIsInBDaXR5IiwicFN0YXRlIiwicFBpbmNvZGUiLCJwSGVpZ2h0IiwicFdlaWdodCIsInBCbG9vZCIsIlJlZ0NoZW0iLCJSZWdEb2MiLCJSZWdMYWJDaGVtIiwiUGF0SW5mbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLHVCQUFRLHVDQUFSLEVBQWdEO0FBQUVBLEVBQUFBLGVBQWUsRUFBRTtBQUFuQixDQUFoRCxFQUNLQyxJQURMLENBQ1U7QUFBQSxTQUFJQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSwwQkFBWixDQUFKO0FBQUEsQ0FEVixXQUVXLFVBQUFDLEdBQUc7QUFBQSxTQUFJRixPQUFPLENBQUNHLEtBQVIsQ0FBYyx1QkFBZCxFQUFzQ0QsR0FBdEMsQ0FBSjtBQUFBLENBRmQ7QUFLQSxJQUFNRSxZQUFZLEdBQUcsSUFBSUMsZ0JBQUosQ0FBVztBQUM1QkMsRUFBQUEsR0FBRyxFQUFHQyxNQURzQjtBQUU1QkMsRUFBQUEsTUFBTSxFQUFHRCxNQUZtQjtBQUc1QkUsRUFBQUEsT0FBTyxFQUFHRixNQUhrQjtBQUk1QkcsRUFBQUEsVUFBVSxFQUFHSCxNQUplO0FBSzVCSSxFQUFBQSxTQUFTLEVBQUdKLE1BTGdCO0FBTTVCSyxFQUFBQSxNQUFNLEVBQUdMLE1BTm1CO0FBTzVCTSxFQUFBQSxTQUFTLEVBQUdOLE1BUGdCO0FBUTVCTyxFQUFBQSxNQUFNLEVBQUdQO0FBUm1CLENBQVgsQ0FBckI7QUFXQSxJQUFNUSxhQUFhLEdBQUcsSUFBSVYsZ0JBQUosQ0FBVztBQUM3QkMsRUFBQUEsR0FBRyxFQUFHQyxNQUR1QjtBQUU3QlMsRUFBQUEsS0FBSyxFQUFHVCxNQUZxQjtBQUc3QlUsRUFBQUEsTUFBTSxFQUFHVixNQUhvQjtBQUk3QlcsRUFBQUEsUUFBUSxFQUFHWCxNQUprQjtBQUs3QlksRUFBQUEsS0FBSyxFQUFHWixNQUxxQjtBQU03QmEsRUFBQUEsUUFBUSxFQUFHYixNQU5rQjtBQU83QmMsRUFBQUEsU0FBUyxFQUFHZCxNQVBpQjtBQVE3Qk8sRUFBQUEsTUFBTSxFQUFHUDtBQVJvQixDQUFYLENBQXRCO0FBV0EsSUFBTWUsZ0JBQWdCLEdBQUcsSUFBSWpCLGdCQUFKLENBQVc7QUFDaENDLEVBQUFBLEdBQUcsRUFBR0MsTUFEMEI7QUFFaENnQixFQUFBQSxLQUFLLEVBQUdoQixNQUZ3QjtBQUdoQ2lCLEVBQUFBLE1BQU0sRUFBR2pCLE1BSHVCO0FBSWhDa0IsRUFBQUEsUUFBUSxFQUFHbEIsTUFKcUI7QUFLaENtQixFQUFBQSxRQUFRLEVBQUduQixNQUxxQjtBQU1oQ29CLEVBQUFBLEtBQUssRUFBR3BCLE1BTndCO0FBT2hDcUIsRUFBQUEsUUFBUSxFQUFHckIsTUFQcUI7QUFRaENzQixFQUFBQSxTQUFTLEVBQUd0QixNQVJvQjtBQVNoQ08sRUFBQUEsTUFBTSxFQUFHUDtBQVR1QixDQUFYLENBQXpCO0FBWUEsSUFBTXVCLGFBQWEsR0FBRyxJQUFJekIsZ0JBQUosQ0FBVztBQUM3QkMsRUFBQUEsR0FBRyxFQUFHQyxNQUR1QjtBQUU3QndCLEVBQUFBLEtBQUssRUFBR3hCLE1BRnFCO0FBRzdCeUIsRUFBQUEsT0FBTyxFQUFHekIsTUFIbUI7QUFJN0IwQixFQUFBQSxLQUFLLEVBQUcxQixNQUpxQjtBQUs3QjJCLEVBQUFBLE1BQU0sRUFBRzNCLE1BTG9CO0FBTTdCNEIsRUFBQUEsUUFBUSxFQUFHNUIsTUFOa0I7QUFPN0I2QixFQUFBQSxLQUFLLEVBQUc3QixNQVBxQjtBQVE3QjhCLEVBQUFBLE1BQU0sRUFBRzlCLE1BUm9CO0FBUzdCK0IsRUFBQUEsUUFBUSxFQUFHL0IsTUFUa0I7QUFVN0JPLEVBQUFBLE1BQU0sRUFBR1AsTUFWb0I7QUFXN0JnQyxFQUFBQSxPQUFPLEVBQUdoQyxNQVhtQjtBQVk3QmlDLEVBQUFBLE9BQU8sRUFBR2pDLE1BWm1CO0FBYTdCa0MsRUFBQUEsTUFBTSxFQUFHbEM7QUFib0IsQ0FBWCxDQUF0QjtBQWdCQSxJQUFNbUMsT0FBTyxHQUFHLHFCQUFNLFNBQU4sRUFBZ0IzQixhQUFoQixDQUFoQjtBQUNBLElBQU00QixNQUFNLEdBQUcscUJBQU0sUUFBTixFQUFldkMsWUFBZixDQUFmO0FBQ0EsSUFBTXdDLFVBQVUsR0FBRyxxQkFBTSxZQUFOLEVBQW1CdEIsZ0JBQW5CLENBQW5CO0FBQ0EsSUFBTXVCLE9BQU8sR0FBRyxxQkFBTSxTQUFOLEVBQWdCZixhQUFoQixDQUFoQjtlQUVlO0FBQUNZLEVBQUFBLE9BQU8sRUFBUEEsT0FBRDtBQUFTQyxFQUFBQSxNQUFNLEVBQU5BLE1BQVQ7QUFBZ0JDLEVBQUFBLFVBQVUsRUFBVkEsVUFBaEI7QUFBMkJDLEVBQUFBLE9BQU8sRUFBUEE7QUFBM0IsQyIsInNvdXJjZVJvb3QiOiIvaG9tZS9qYXkvSGFja2F0aG9uXzJrMjAvTm9kZUpzL05vZGVKc19EZW1vL3NyYy9tb2RlbHMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCwgU2NoZW1hLCBtb2RlbCB9IGZyb20gJ21vbmdvb3NlJztcblxuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9JbmZvcm1hdGlvbicseyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSlcbiAgICAudGhlbigoKT0+Y29uc29sZS5sb2coJ05vdyBjb25uZWN0ZWQgdG8gTW9uZ29EQicpKVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcignc29tZXRoaW5nIGdvaW5nIHdyb25nJyxlcnIpKTtcblxuXG5jb25zdCBSZWdkb2NTY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBfaWQgOiBTdHJpbmcsXG4gICAgZHJOYW1lIDogU3RyaW5nLFxuICAgIGRybW9iTm8gOiBTdHJpbmcsXG4gICAgZHJQYXNzd29yZCA6IFN0cmluZyxcbiAgICBkckxpY2Vuc2UgOiBTdHJpbmcsXG4gICAgZHJDaXR5IDogU3RyaW5nLFxuICAgIGRyUGluY29kZSA6IFN0cmluZyxcbiAgICBkb21haW4gOiBTdHJpbmcsXG59KTtcblxuY29uc3QgUmFnY2hlbVNjaGVtYSA9IG5ldyBTY2hlbWEoe1xuICAgIF9pZCA6IFN0cmluZyxcbiAgICBjTmFtZSA6IFN0cmluZyxcbiAgICBjbW9iTm8gOiBTdHJpbmcsXG4gICAgY0FkZHJlc3MgOiBTdHJpbmcsXG4gICAgY0NpdHkgOiBTdHJpbmcsXG4gICAgY1BpbmNvZGUgOiBTdHJpbmcsXG4gICAgY1Bhc3N3b3JkIDogU3RyaW5nLFxuICAgIGRvbWFpbiA6IFN0cmluZ1xufSk7XG5cbmNvbnN0IFJlZ0xhYkNoZW1TY2hlbWEgPSBuZXcgU2NoZW1hKHtcbiAgICBfaWQgOiBTdHJpbmcsXG4gICAgbE5hbWUgOiBTdHJpbmcsXG4gICAgbG1vYk5vIDogU3RyaW5nLFxuICAgIGxMaWNlbnNlIDogU3RyaW5nLFxuICAgIGxBZGRyZXNzIDogU3RyaW5nLFxuICAgIGxDaXR5IDogU3RyaW5nLFxuICAgIGxQaW5jb2RlIDogU3RyaW5nLFxuICAgIGxQYXNzd29yZCA6IFN0cmluZyxcbiAgICBkb21haW4gOiBTdHJpbmdcbn0pO1xuXG5jb25zdCBQYXRJbmZvU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gICAgX2lkIDogU3RyaW5nLFxuICAgIHBOYW1lIDogU3RyaW5nLFxuICAgIHBHZW5kZXIgOiBTdHJpbmcsXG4gICAgcERhdGUgOiBTdHJpbmcsXG4gICAgcEVtYWlsIDogU3RyaW5nLFxuICAgIHBBZGRyZXNzIDogU3RyaW5nLFxuICAgIHBDaXR5IDogU3RyaW5nLFxuICAgIHBTdGF0ZSA6IFN0cmluZyxcbiAgICBwUGluY29kZSA6IFN0cmluZyxcbiAgICBkb21haW4gOiBTdHJpbmcsXG4gICAgcEhlaWdodCA6IFN0cmluZyxcbiAgICBwV2VpZ2h0IDogU3RyaW5nLFxuICAgIHBCbG9vZCA6IFN0cmluZyxcbn0pO1xuXG5jb25zdCBSZWdDaGVtID0gbW9kZWwoJ1JlZ0NoZW0nLFJhZ2NoZW1TY2hlbWEpO1xuY29uc3QgUmVnRG9jID0gbW9kZWwoJ1JlZ0RvYycsUmVnZG9jU2NoZW1hKTtcbmNvbnN0IFJlZ0xhYkNoZW0gPSBtb2RlbCgnUmVnTGFiQ2hlbScsUmVnTGFiQ2hlbVNjaGVtYSk7XG5jb25zdCBQYXRJbmZvID0gbW9kZWwoJ1BhdEluZm8nLFBhdEluZm9TY2hlbWEpO1xuXG5leHBvcnQgZGVmYXVsdCB7UmVnQ2hlbSxSZWdEb2MsUmVnTGFiQ2hlbSxQYXRJbmZvfTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "InfoAll.js"
      ],
      "names": [
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "err",
        "error",
        "RegdocSchema",
        "Schema",
        "_id",
        "String",
        "drName",
        "drmobNo",
        "drPassword",
        "drLicense",
        "drCity",
        "drPincode",
        "domain",
        "RagchemSchema",
        "cName",
        "cmobNo",
        "cAddress",
        "cCity",
        "cPincode",
        "cPassword",
        "RegLabChemSchema",
        "lName",
        "lmobNo",
        "lLicense",
        "lAddress",
        "lCity",
        "lPincode",
        "lPassword",
        "PatInfoSchema",
        "pName",
        "pGender",
        "pDate",
        "pEmail",
        "pAddress",
        "pCity",
        "pState",
        "pPincode",
        "pHeight",
        "pWeight",
        "pBlood",
        "RegChem",
        "RegDoc",
        "RegLabChem",
        "PatInfo"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,uBAAQ,uCAAR,EAAgD;AAAEA,EAAAA,eAAe,EAAE;AAAnB,CAAhD,EACKC,IADL,CACU;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAJ;AAAA,CADV,WAEW,UAAAC,GAAG;AAAA,SAAIF,OAAO,CAACG,KAAR,CAAc,uBAAd,EAAsCD,GAAtC,CAAJ;AAAA,CAFd;AAKA,IAAME,YAAY,GAAG,IAAIC,gBAAJ,CAAW;AAC5BC,EAAAA,GAAG,EAAGC,MADsB;AAE5BC,EAAAA,MAAM,EAAGD,MAFmB;AAG5BE,EAAAA,OAAO,EAAGF,MAHkB;AAI5BG,EAAAA,UAAU,EAAGH,MAJe;AAK5BI,EAAAA,SAAS,EAAGJ,MALgB;AAM5BK,EAAAA,MAAM,EAAGL,MANmB;AAO5BM,EAAAA,SAAS,EAAGN,MAPgB;AAQ5BO,EAAAA,MAAM,EAAGP;AARmB,CAAX,CAArB;AAWA,IAAMQ,aAAa,GAAG,IAAIV,gBAAJ,CAAW;AAC7BC,EAAAA,GAAG,EAAGC,MADuB;AAE7BS,EAAAA,KAAK,EAAGT,MAFqB;AAG7BU,EAAAA,MAAM,EAAGV,MAHoB;AAI7BW,EAAAA,QAAQ,EAAGX,MAJkB;AAK7BY,EAAAA,KAAK,EAAGZ,MALqB;AAM7Ba,EAAAA,QAAQ,EAAGb,MANkB;AAO7Bc,EAAAA,SAAS,EAAGd,MAPiB;AAQ7BO,EAAAA,MAAM,EAAGP;AARoB,CAAX,CAAtB;AAWA,IAAMe,gBAAgB,GAAG,IAAIjB,gBAAJ,CAAW;AAChCC,EAAAA,GAAG,EAAGC,MAD0B;AAEhCgB,EAAAA,KAAK,EAAGhB,MAFwB;AAGhCiB,EAAAA,MAAM,EAAGjB,MAHuB;AAIhCkB,EAAAA,QAAQ,EAAGlB,MAJqB;AAKhCmB,EAAAA,QAAQ,EAAGnB,MALqB;AAMhCoB,EAAAA,KAAK,EAAGpB,MANwB;AAOhCqB,EAAAA,QAAQ,EAAGrB,MAPqB;AAQhCsB,EAAAA,SAAS,EAAGtB,MARoB;AAShCO,EAAAA,MAAM,EAAGP;AATuB,CAAX,CAAzB;AAYA,IAAMuB,aAAa,GAAG,IAAIzB,gBAAJ,CAAW;AAC7BC,EAAAA,GAAG,EAAGC,MADuB;AAE7BwB,EAAAA,KAAK,EAAGxB,MAFqB;AAG7ByB,EAAAA,OAAO,EAAGzB,MAHmB;AAI7B0B,EAAAA,KAAK,EAAG1B,MAJqB;AAK7B2B,EAAAA,MAAM,EAAG3B,MALoB;AAM7B4B,EAAAA,QAAQ,EAAG5B,MANkB;AAO7B6B,EAAAA,KAAK,EAAG7B,MAPqB;AAQ7B8B,EAAAA,MAAM,EAAG9B,MARoB;AAS7B+B,EAAAA,QAAQ,EAAG/B,MATkB;AAU7BO,EAAAA,MAAM,EAAGP,MAVoB;AAW7BgC,EAAAA,OAAO,EAAGhC,MAXmB;AAY7BiC,EAAAA,OAAO,EAAGjC,MAZmB;AAa7BkC,EAAAA,MAAM,EAAGlC;AAboB,CAAX,CAAtB;AAgBA,IAAMmC,OAAO,GAAG,qBAAM,SAAN,EAAgB3B,aAAhB,CAAhB;AACA,IAAM4B,MAAM,GAAG,qBAAM,QAAN,EAAevC,YAAf,CAAf;AACA,IAAMwC,UAAU,GAAG,qBAAM,YAAN,EAAmBtB,gBAAnB,CAAnB;AACA,IAAMuB,OAAO,GAAG,qBAAM,SAAN,EAAgBf,aAAhB,CAAhB;eAEe;AAACY,EAAAA,OAAO,EAAPA,OAAD;AAASC,EAAAA,MAAM,EAANA,MAAT;AAAgBC,EAAAA,UAAU,EAAVA,UAAhB;AAA2BC,EAAAA,OAAO,EAAPA;AAA3B,C",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
      "sourcesContent": [
        "import { connect, Schema, model } from 'mongoose';\n\nconnect('mongodb://localhost:27017/Information',{ useNewUrlParser: true })\n    .then(()=>console.log('Now connected to MongoDB'))\n    .catch(err => console.error('something going wrong',err));\n\n\nconst RegdocSchema = new Schema({\n    _id : String,\n    drName : String,\n    drmobNo : String,\n    drPassword : String,\n    drLicense : String,\n    drCity : String,\n    drPincode : String,\n    domain : String,\n});\n\nconst RagchemSchema = new Schema({\n    _id : String,\n    cName : String,\n    cmobNo : String,\n    cAddress : String,\n    cCity : String,\n    cPincode : String,\n    cPassword : String,\n    domain : String\n});\n\nconst RegLabChemSchema = new Schema({\n    _id : String,\n    lName : String,\n    lmobNo : String,\n    lLicense : String,\n    lAddress : String,\n    lCity : String,\n    lPincode : String,\n    lPassword : String,\n    domain : String\n});\n\nconst PatInfoSchema = new Schema({\n    _id : String,\n    pName : String,\n    pGender : String,\n    pDate : String,\n    pEmail : String,\n    pAddress : String,\n    pCity : String,\n    pState : String,\n    pPincode : String,\n    domain : String,\n    pHeight : String,\n    pWeight : String,\n    pBlood : String,\n});\n\nconst RegChem = model('RegChem',RagchemSchema);\nconst RegDoc = model('RegDoc',RegdocSchema);\nconst RegLabChem = model('RegLabChem',RegLabChemSchema);\nconst PatInfo = model('PatInfo',PatInfoSchema);\n\nexport default {RegChem,RegDoc,RegLabChem,PatInfo};"
      ]
    },
    "sourceType": "script",
    "mtime": 1585814915031
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/login.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/login.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/login.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/login.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
        "sourceFileName": "login.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _bodyParser = require(\"body-parser\");\n\nvar _InfoAll = require(\"../src/models/InfoAll\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])();\nvar router = (0, _express.Router)();\nrouter.use((0, _bodyParser.json)());\nrouter.use((0, _bodyParser.urlencoded)({\n  extended: true\n}));\n\n/* Register of Doctor */\nrouter.all('/logDoc', function (req, res, next) {\n  _InfoAll.RegDoc.findById({\n    _id: req.body.drEmail\n  }).exec(function (err, RegDoc) {\n    try {\n      err ? res.send('Pls register') : RegDoc.drPassword == req.body.drPassWord ? (req.session.email = req.body.drEmail, res.send('1')) : res.send('Password Is Wrong');\n    } catch (_unused) {\n      res.send('You do not register yet');\n    }\n  });\n});\n/* Register of Chemist */\n\nrouter.all('/logchem', function (req, res, next) {\n  _InfoAll.RegChem.findById({\n    _id: req.body.cEmail\n  }).exec(function (err, RegChem) {\n    try {\n      err ? res.send('Pls register') : RegChem.cPassword == req.body.cPassword ? (req.session.email = req.body.cEmail, res.send('1')) : res.send('Password Is Wrong');\n    } catch (_unused2) {\n      res.send('You do not register yet');\n    }\n  });\n});\n/* Login of LabChem */\n\nrouter.all('/loglabchem', function (req, res, next) {\n  _InfoAll.RegLabChem.findById({\n    _id: req.body.lEmail\n  }).exec(function (err, RegLabChem) {\n    try {\n      err ? res.send('Pls register') : RegLabChem.lPassword == req.body.lPassword ? (req.session.email = req.body.lEmail, res.send('1')) : res.send('Password Is Wrong');\n    } catch (_unused3) {\n      res.send('You do not register yet');\n    }\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmpzIl0sIm5hbWVzIjpbImFwcCIsInJvdXRlciIsInVzZSIsImV4dGVuZGVkIiwiYWxsIiwicmVxIiwicmVzIiwibmV4dCIsIlJlZ0RvYyIsImZpbmRCeUlkIiwiX2lkIiwiYm9keSIsImRyRW1haWwiLCJleGVjIiwiZXJyIiwic2VuZCIsImRyUGFzc3dvcmQiLCJkclBhc3NXb3JkIiwic2Vzc2lvbiIsImVtYWlsIiwiUmVnQ2hlbSIsImNFbWFpbCIsImNQYXNzd29yZCIsIlJlZ0xhYkNoZW0iLCJsRW1haWwiLCJsUGFzc3dvcmQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUdBOztBQUdBOzs7Ozs7QUFMQSxJQUFJQSxHQUFHLEdBQUcsMEJBQVY7QUFDQSxJQUFJQyxNQUFNLEdBQUcsc0JBQWI7QUFFQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsdUJBQVg7QUFDQUQsTUFBTSxDQUFDQyxHQUFQLENBQVcsNEJBQVc7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBWCxDQUFYOztBQUlBO0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFNBQVgsRUFBcUIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBa0I7QUFDbkNDLGtCQUFPQyxRQUFQLENBQWdCO0FBQUNDLElBQUFBLEdBQUcsRUFBQ0wsR0FBRyxDQUFDTSxJQUFKLENBQVNDO0FBQWQsR0FBaEIsRUFDQ0MsSUFERCxDQUNNLFVBQUNDLEdBQUQsRUFBS04sTUFBTCxFQUFjO0FBQ2hCLFFBQUc7QUFDQ00sTUFBQUEsR0FBRyxHQUNIUixHQUFHLENBQUNTLElBQUosQ0FBUyxjQUFULENBREcsR0FFRlAsTUFBTSxDQUFDUSxVQUFQLElBQXFCWCxHQUFHLENBQUNNLElBQUosQ0FBU00sVUFBOUIsSUFBNENaLEdBQUcsQ0FBQ2EsT0FBSixDQUFZQyxLQUFaLEdBQW9CZCxHQUFHLENBQUNNLElBQUosQ0FBU0MsT0FBN0IsRUFBcUNOLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLEdBQVQsQ0FBakYsSUFBaUdULEdBQUcsQ0FBQ1MsSUFBSixDQUFTLG1CQUFULENBRmxHO0FBR0gsS0FKRCxDQUlDLGdCQUFLO0FBQUNULE1BQUFBLEdBQUcsQ0FBQ1MsSUFBSixDQUFTLHlCQUFUO0FBQXFDO0FBQy9DLEdBUEQ7QUFRSCxDQVREO0FBWUE7O0FBQ0FkLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLFVBQVgsRUFBc0IsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBa0I7QUFDcENhLG1CQUFRWCxRQUFSLENBQWlCO0FBQUNDLElBQUFBLEdBQUcsRUFBQ0wsR0FBRyxDQUFDTSxJQUFKLENBQVNVO0FBQWQsR0FBakIsRUFDQ1IsSUFERCxDQUNNLFVBQUNDLEdBQUQsRUFBS00sT0FBTCxFQUFlO0FBQ2pCLFFBQUc7QUFDQ04sTUFBQUEsR0FBRyxHQUNIUixHQUFHLENBQUNTLElBQUosQ0FBUyxjQUFULENBREcsR0FFRkssT0FBTyxDQUFDRSxTQUFSLElBQXFCakIsR0FBRyxDQUFDTSxJQUFKLENBQVNXLFNBQTlCLElBQTJDakIsR0FBRyxDQUFDYSxPQUFKLENBQVlDLEtBQVosR0FBb0JkLEdBQUcsQ0FBQ00sSUFBSixDQUFTVSxNQUE3QixFQUFvQ2YsR0FBRyxDQUFDUyxJQUFKLENBQVMsR0FBVCxDQUEvRSxJQUFnR1QsR0FBRyxDQUFDUyxJQUFKLENBQVMsbUJBQVQsQ0FGakc7QUFHSCxLQUpELENBSUMsaUJBQUs7QUFBQ1QsTUFBQUEsR0FBRyxDQUFDUyxJQUFKLENBQVMseUJBQVQ7QUFBcUM7QUFDL0MsR0FQRDtBQVFILENBVEQ7QUFZQTs7QUFDQWQsTUFBTSxDQUFDRyxHQUFQLENBQVcsYUFBWCxFQUF5QixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBU0MsSUFBVCxFQUFrQjtBQUN2Q2dCLHNCQUFXZCxRQUFYLENBQW9CO0FBQUNDLElBQUFBLEdBQUcsRUFBQ0wsR0FBRyxDQUFDTSxJQUFKLENBQVNhO0FBQWQsR0FBcEIsRUFDQ1gsSUFERCxDQUNNLFVBQUNDLEdBQUQsRUFBS1MsVUFBTCxFQUFrQjtBQUNwQixRQUFHO0FBQ0NULE1BQUFBLEdBQUcsR0FDSFIsR0FBRyxDQUFDUyxJQUFKLENBQVMsY0FBVCxDQURHLEdBRUZRLFVBQVUsQ0FBQ0UsU0FBWCxJQUF3QnBCLEdBQUcsQ0FBQ00sSUFBSixDQUFTYyxTQUFqQyxJQUE4Q3BCLEdBQUcsQ0FBQ2EsT0FBSixDQUFZQyxLQUFaLEdBQW9CZCxHQUFHLENBQUNNLElBQUosQ0FBU2EsTUFBN0IsRUFBb0NsQixHQUFHLENBQUNTLElBQUosQ0FBUyxHQUFULENBQWxGLElBQW1HVCxHQUFHLENBQUNTLElBQUosQ0FBUyxtQkFBVCxDQUZwRztBQUdILEtBSkQsQ0FJQyxpQkFBSztBQUFDVCxNQUFBQSxHQUFHLENBQUNTLElBQUosQ0FBUyx5QkFBVDtBQUFxQztBQUMvQyxHQVBEO0FBUUgsQ0FURDtlQVllZCxNIiwic291cmNlUm9vdCI6Ii9ob21lL2pheS9IYWNrYXRob25fMmsyMC9Ob2RlSnMvTm9kZUpzX0RlbW8vcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzLCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xyXG52YXIgYXBwID0gZXhwcmVzcygpO1xyXG52YXIgcm91dGVyID0gUm91dGVyKCk7XHJcbmltcG9ydCB7IGpzb24sIHVybGVuY29kZWQgfSBmcm9tICdib2R5LXBhcnNlcic7XHJcbnJvdXRlci51c2UoanNvbigpKTtcclxucm91dGVyLnVzZSh1cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xyXG5pbXBvcnQgeyBSZWdDaGVtLCBSZWdEb2MsIFJlZ0xhYkNoZW0gfSBmcm9tICcuLi9zcmMvbW9kZWxzL0luZm9BbGwnO1xyXG5cclxuXHJcbi8qIFJlZ2lzdGVyIG9mIERvY3RvciAqL1xyXG5yb3V0ZXIuYWxsKCcvbG9nRG9jJywocmVxLHJlcyxuZXh0KSA9PiB7XHJcbiAgICBSZWdEb2MuZmluZEJ5SWQoe19pZDpyZXEuYm9keS5kckVtYWlsfSlcclxuICAgIC5leGVjKChlcnIsUmVnRG9jKT0+e1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgZXJyID8gXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKCdQbHMgcmVnaXN0ZXInKSA6XHJcbiAgICAgICAgICAgIChSZWdEb2MuZHJQYXNzd29yZCA9PSByZXEuYm9keS5kclBhc3NXb3JkID8gKHJlcS5zZXNzaW9uLmVtYWlsID0gcmVxLmJvZHkuZHJFbWFpbCxyZXMuc2VuZCgnMScpKTogcmVzLnNlbmQoJ1Bhc3N3b3JkIElzIFdyb25nJykpO1xyXG4gICAgICAgIH1jYXRjaHtyZXMuc2VuZCgnWW91IGRvIG5vdCByZWdpc3RlciB5ZXQnKTt9XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG5cclxuLyogUmVnaXN0ZXIgb2YgQ2hlbWlzdCAqL1xyXG5yb3V0ZXIuYWxsKCcvbG9nY2hlbScsKHJlcSxyZXMsbmV4dCkgPT4ge1xyXG4gICAgUmVnQ2hlbS5maW5kQnlJZCh7X2lkOnJlcS5ib2R5LmNFbWFpbH0pXHJcbiAgICAuZXhlYygoZXJyLFJlZ0NoZW0pPT57XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBlcnIgPyBcclxuICAgICAgICAgICAgcmVzLnNlbmQoJ1BscyByZWdpc3RlcicpIDpcclxuICAgICAgICAgICAgKFJlZ0NoZW0uY1Bhc3N3b3JkID09IHJlcS5ib2R5LmNQYXNzd29yZCA/IChyZXEuc2Vzc2lvbi5lbWFpbCA9IHJlcS5ib2R5LmNFbWFpbCxyZXMuc2VuZCgnMScpKSA6IHJlcy5zZW5kKCdQYXNzd29yZCBJcyBXcm9uZycpKTtcclxuICAgICAgICB9Y2F0Y2h7cmVzLnNlbmQoJ1lvdSBkbyBub3QgcmVnaXN0ZXIgeWV0Jyk7fVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuXHJcbi8qIExvZ2luIG9mIExhYkNoZW0gKi9cclxucm91dGVyLmFsbCgnL2xvZ2xhYmNoZW0nLChyZXEscmVzLG5leHQpID0+IHtcclxuICAgIFJlZ0xhYkNoZW0uZmluZEJ5SWQoe19pZDpyZXEuYm9keS5sRW1haWx9KVxyXG4gICAgLmV4ZWMoKGVycixSZWdMYWJDaGVtKT0+e1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgZXJyID8gXHJcbiAgICAgICAgICAgIHJlcy5zZW5kKCdQbHMgcmVnaXN0ZXInKSA6XHJcbiAgICAgICAgICAgIChSZWdMYWJDaGVtLmxQYXNzd29yZCA9PSByZXEuYm9keS5sUGFzc3dvcmQgPyAocmVxLnNlc3Npb24uZW1haWwgPSByZXEuYm9keS5sRW1haWwscmVzLnNlbmQoJzEnKSkgOiByZXMuc2VuZCgnUGFzc3dvcmQgSXMgV3JvbmcnKSk7XHJcbiAgICAgICAgfWNhdGNoe3Jlcy5zZW5kKCdZb3UgZG8gbm90IHJlZ2lzdGVyIHlldCcpO31cclxuICAgIH0pO1xyXG59KTtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "login.js"
      ],
      "names": [
        "app",
        "router",
        "use",
        "extended",
        "all",
        "req",
        "res",
        "next",
        "RegDoc",
        "findById",
        "_id",
        "body",
        "drEmail",
        "exec",
        "err",
        "send",
        "drPassword",
        "drPassWord",
        "session",
        "email",
        "RegChem",
        "cEmail",
        "cPassword",
        "RegLabChem",
        "lEmail",
        "lPassword"
      ],
      "mappings": ";;;;;;;;;AAAA;;AAGA;;AAGA;;;;;;AALA,IAAIA,GAAG,GAAG,0BAAV;AACA,IAAIC,MAAM,GAAG,sBAAb;AAEAA,MAAM,CAACC,GAAP,CAAW,uBAAX;AACAD,MAAM,CAACC,GAAP,CAAW,4BAAW;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAX,CAAX;;AAIA;AACAF,MAAM,CAACG,GAAP,CAAW,SAAX,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACnCC,kBAAOC,QAAP,CAAgB;AAACC,IAAAA,GAAG,EAACL,GAAG,CAACM,IAAJ,CAASC;AAAd,GAAhB,EACCC,IADD,CACM,UAACC,GAAD,EAAKN,MAAL,EAAc;AAChB,QAAG;AACCM,MAAAA,GAAG,GACHR,GAAG,CAACS,IAAJ,CAAS,cAAT,CADG,GAEFP,MAAM,CAACQ,UAAP,IAAqBX,GAAG,CAACM,IAAJ,CAASM,UAA9B,IAA4CZ,GAAG,CAACa,OAAJ,CAAYC,KAAZ,GAAoBd,GAAG,CAACM,IAAJ,CAASC,OAA7B,EAAqCN,GAAG,CAACS,IAAJ,CAAS,GAAT,CAAjF,IAAiGT,GAAG,CAACS,IAAJ,CAAS,mBAAT,CAFlG;AAGH,KAJD,CAIC,gBAAK;AAACT,MAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;AAAqC;AAC/C,GAPD;AAQH,CATD;AAYA;;AACAd,MAAM,CAACG,GAAP,CAAW,UAAX,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACpCa,mBAAQX,QAAR,CAAiB;AAACC,IAAAA,GAAG,EAACL,GAAG,CAACM,IAAJ,CAASU;AAAd,GAAjB,EACCR,IADD,CACM,UAACC,GAAD,EAAKM,OAAL,EAAe;AACjB,QAAG;AACCN,MAAAA,GAAG,GACHR,GAAG,CAACS,IAAJ,CAAS,cAAT,CADG,GAEFK,OAAO,CAACE,SAAR,IAAqBjB,GAAG,CAACM,IAAJ,CAASW,SAA9B,IAA2CjB,GAAG,CAACa,OAAJ,CAAYC,KAAZ,GAAoBd,GAAG,CAACM,IAAJ,CAASU,MAA7B,EAAoCf,GAAG,CAACS,IAAJ,CAAS,GAAT,CAA/E,IAAgGT,GAAG,CAACS,IAAJ,CAAS,mBAAT,CAFjG;AAGH,KAJD,CAIC,iBAAK;AAACT,MAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;AAAqC;AAC/C,GAPD;AAQH,CATD;AAYA;;AACAd,MAAM,CAACG,GAAP,CAAW,aAAX,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACvCgB,sBAAWd,QAAX,CAAoB;AAACC,IAAAA,GAAG,EAACL,GAAG,CAACM,IAAJ,CAASa;AAAd,GAApB,EACCX,IADD,CACM,UAACC,GAAD,EAAKS,UAAL,EAAkB;AACpB,QAAG;AACCT,MAAAA,GAAG,GACHR,GAAG,CAACS,IAAJ,CAAS,cAAT,CADG,GAEFQ,UAAU,CAACE,SAAX,IAAwBpB,GAAG,CAACM,IAAJ,CAASc,SAAjC,IAA8CpB,GAAG,CAACa,OAAJ,CAAYC,KAAZ,GAAoBd,GAAG,CAACM,IAAJ,CAASa,MAA7B,EAAoClB,GAAG,CAACS,IAAJ,CAAS,GAAT,CAAlF,IAAmGT,GAAG,CAACS,IAAJ,CAAS,mBAAT,CAFpG;AAGH,KAJD,CAIC,iBAAK;AAACT,MAAAA,GAAG,CAACS,IAAJ,CAAS,yBAAT;AAAqC;AAC/C,GAPD;AAQH,CATD;eAYed,M",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "sourcesContent": [
        "import express, { Router } from 'express';\r\nvar app = express();\r\nvar router = Router();\r\nimport { json, urlencoded } from 'body-parser';\r\nrouter.use(json());\r\nrouter.use(urlencoded({ extended: true }));\r\nimport { RegChem, RegDoc, RegLabChem } from '../src/models/InfoAll';\r\n\r\n\r\n/* Register of Doctor */\r\nrouter.all('/logDoc',(req,res,next) => {\r\n    RegDoc.findById({_id:req.body.drEmail})\r\n    .exec((err,RegDoc)=>{\r\n        try{\r\n            err ? \r\n            res.send('Pls register') :\r\n            (RegDoc.drPassword == req.body.drPassWord ? (req.session.email = req.body.drEmail,res.send('1')): res.send('Password Is Wrong'));\r\n        }catch{res.send('You do not register yet');}\r\n    });\r\n});\r\n\r\n\r\n/* Register of Chemist */\r\nrouter.all('/logchem',(req,res,next) => {\r\n    RegChem.findById({_id:req.body.cEmail})\r\n    .exec((err,RegChem)=>{\r\n        try{\r\n            err ? \r\n            res.send('Pls register') :\r\n            (RegChem.cPassword == req.body.cPassword ? (req.session.email = req.body.cEmail,res.send('1')) : res.send('Password Is Wrong'));\r\n        }catch{res.send('You do not register yet');}\r\n    });\r\n});\r\n\r\n\r\n/* Login of LabChem */\r\nrouter.all('/loglabchem',(req,res,next) => {\r\n    RegLabChem.findById({_id:req.body.lEmail})\r\n    .exec((err,RegLabChem)=>{\r\n        try{\r\n            err ? \r\n            res.send('Pls register') :\r\n            (RegLabChem.lPassword == req.body.lPassword ? (req.session.email = req.body.lEmail,res.send('1')) : res.send('Password Is Wrong'));\r\n        }catch{res.send('You do not register yet');}\r\n    });\r\n});\r\n\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585813434289
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/register.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/register.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/register.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/register.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
        "sourceFileName": "register.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _emailValidator = require(\"email-validator\");\n\nvar _bodyParser = require(\"body-parser\");\n\nvar _InfoAll = require(\"../src/models/InfoAll\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.use((0, _bodyParser.json)());\nrouter.use((0, _bodyParser.urlencoded)({\n  extended: true\n}));\nrouter.use((0, _expressSession[\"default\"])({\n  'secret': 'jay',\n  saveUninitialized: true,\n  resave: true\n}));\n/* Register of Doctor */\n\nrouter.all('/RegDoc', function (req, res, next) {\n  console.log('in the regdoc'); //if(validate(req.body.drEmail)){\n\n  var regdoc = new _InfoAll.RegDoc({\n    _id: req.body.drEmail,\n    drName: req.body.drName,\n    drmobNo: req.body.drmobNo,\n    drPassword: req.body.drPassword,\n    drLicense: req.body.drLicense,\n    drCity: req.body.drCity,\n    drPincode: req.body.drPincode,\n    domain: req.body.domain\n  });\n  console.log('catch it');\n  regdoc.save().then(function () {\n    req.session.email = req.body.drEmail;\n    res.send('1');\n  })[\"catch\"](function (err) {\n    res.send('soni');\n    console.log('something going wrong', err);\n  }); //}else{\n  //res.send('EmailId is not Validate');\n  //}\n});\n/* Register of Chemist */\n\nrouter.all('/RegChem', function (req, res, next) {\n  var regchem = new _InfoAll.RegChem({\n    cName: req.body.cName,\n    cmobNo: req.body.cmobNo,\n    _id: req.body.cEmail,\n    cAddress: req.body.cAddress,\n    cCity: req.body.cCity,\n    cPincode: req.body.cPincode,\n    cPassword: req.body.cPassword,\n    domain: req.body.domain\n  });\n  regchem.save().then(function () {\n    req.session.email = req.body.cEmail;\n    res.send('1');\n  })[\"catch\"](function (err) {\n    return console.error('something going wrong', err);\n  });\n});\n/* Register of LabChemist */\n\nrouter.all('/RegLabChem', function (req, res, next) {\n  var regchem = new _InfoAll.RegLabChem({\n    lName: req.body.lName,\n    lmobNo: req.body.lmobNo,\n    _id: req.body.lEmail,\n    lLicense: req.body.lLicense,\n    lAddress: req.body.lAddress,\n    lCity: req.body.lCity,\n    lPincode: req.body.lPincode,\n    lPassword: req.body.lPassword,\n    domain: req.body.domain\n  });\n  regchem.save().then(function () {\n    req.session.email = req.body.lEmail;\n    res.send('1');\n  })[\"catch\"](function (err) {\n    return console.error('something going wrong', err);\n  });\n});\n/* Register of Patient */\n\nrouter.all('/patinfo', function (req, res, next) {\n  var patinfo = new _InfoAll.PatInfo({\n    pName: req.body.pName,\n    pGender: req.body.pGender,\n    _id: req.body.pmobNo,\n    pDate: req.body.pDate,\n    pEmail: req.body.pEmail,\n    pAddress: req.body.pAddress,\n    pCity: req.body.pCity,\n    pState: req.body.pState,\n    pPincode: req.body.pPincode,\n    pHeight: req.body.pHeight,\n    pWeight: req.body.pWeight,\n    pBlood: req.body.pBlood,\n    domain: req.body.domain\n  });\n  patinfo.save().then(function () {\n    req.session.email = req.body.pmobNo;\n    res.redirect('/jay/table');\n  })[\"catch\"](function (err) {\n    return console.error('something going wrong', err);\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "register.js"
      ],
      "names": [
        "router",
        "use",
        "extended",
        "saveUninitialized",
        "resave",
        "all",
        "req",
        "res",
        "next",
        "console",
        "log",
        "regdoc",
        "RegDoc",
        "_id",
        "body",
        "drEmail",
        "drName",
        "drmobNo",
        "drPassword",
        "drLicense",
        "drCity",
        "drPincode",
        "domain",
        "save",
        "then",
        "session",
        "email",
        "send",
        "err",
        "regchem",
        "RegChem",
        "cName",
        "cmobNo",
        "cEmail",
        "cAddress",
        "cCity",
        "cPincode",
        "cPassword",
        "error",
        "RegLabChem",
        "lName",
        "lmobNo",
        "lEmail",
        "lLicense",
        "lAddress",
        "lCity",
        "lPincode",
        "lPassword",
        "patinfo",
        "PatInfo",
        "pName",
        "pGender",
        "pmobNo",
        "pDate",
        "pEmail",
        "pAddress",
        "pCity",
        "pState",
        "pPincode",
        "pHeight",
        "pWeight",
        "pBlood",
        "redirect"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAGA;;;;AAJA,IAAIA,MAAM,GAAG,sBAAb;AAEAA,MAAM,CAACC,GAAP,CAAW,uBAAX;AACAD,MAAM,CAACC,GAAP,CAAW,4BAAW;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAX,CAAX;AAEAF,MAAM,CAACC,GAAP,CAAW,gCAAQ;AAAC,YAAS,KAAV;AAAgBE,EAAAA,iBAAiB,EAAC,IAAlC;AAAuCC,EAAAA,MAAM,EAAC;AAA9C,CAAR,CAAX;AAEA;;AACAJ,MAAM,CAACK,GAAP,CAAW,SAAX,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EADqC,CAErC;;AACA,MAAIC,MAAM,GAAG,IAAIC,eAAJ,CAAW;AACtBC,IAAAA,GAAG,EAAGP,GAAG,CAACQ,IAAJ,CAASC,OADO;AAEtBC,IAAAA,MAAM,EAAGV,GAAG,CAACQ,IAAJ,CAASE,MAFI;AAGtBC,IAAAA,OAAO,EAAGX,GAAG,CAACQ,IAAJ,CAASG,OAHG;AAItBC,IAAAA,UAAU,EAAGZ,GAAG,CAACQ,IAAJ,CAASI,UAJA;AAKtBC,IAAAA,SAAS,EAAGb,GAAG,CAACQ,IAAJ,CAASK,SALC;AAMtBC,IAAAA,MAAM,EAAGd,GAAG,CAACQ,IAAJ,CAASM,MANI;AAOtBC,IAAAA,SAAS,EAAGf,GAAG,CAACQ,IAAJ,CAASO,SAPC;AAQtBC,IAAAA,MAAM,EAAGhB,GAAG,CAACQ,IAAJ,CAASQ;AARI,GAAX,CAAb;AAUAb,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,EAAAA,MAAM,CAACY,IAAP,GAAcC,IAAd,CAAmB,YAAI;AAAElB,IAAAA,GAAG,CAACmB,OAAJ,CAAYC,KAAZ,GAAoBpB,GAAG,CAACQ,IAAJ,CAASC,OAA7B;AAAsCR,IAAAA,GAAG,CAACoB,IAAJ,CAAS,GAAT;AAAe,GAA9E,WACO,UAAAC,GAAG,EAAI;AAACrB,IAAAA,GAAG,CAACoB,IAAJ,CAAS,MAAT;AAAkBlB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAoCkB,GAApC;AAAyC,GAD1E,EAdqC,CAgBrC;AACE;AACF;AACD,CAnBD;AAqBA;;AACA5B,MAAM,CAACK,GAAP,CAAW,UAAX,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAIqB,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AACxBC,IAAAA,KAAK,EAAGzB,GAAG,CAACQ,IAAJ,CAASiB,KADO;AAExBC,IAAAA,MAAM,EAAG1B,GAAG,CAACQ,IAAJ,CAASkB,MAFM;AAGxBnB,IAAAA,GAAG,EAAGP,GAAG,CAACQ,IAAJ,CAASmB,MAHS;AAIxBC,IAAAA,QAAQ,EAAG5B,GAAG,CAACQ,IAAJ,CAASoB,QAJI;AAKxBC,IAAAA,KAAK,EAAG7B,GAAG,CAACQ,IAAJ,CAASqB,KALO;AAMxBC,IAAAA,QAAQ,EAAG9B,GAAG,CAACQ,IAAJ,CAASsB,QANI;AAOxBC,IAAAA,SAAS,EAAG/B,GAAG,CAACQ,IAAJ,CAASuB,SAPG;AAQxBf,IAAAA,MAAM,EAAGhB,GAAG,CAACQ,IAAJ,CAASQ;AARM,GAAZ,CAAd;AAUAO,EAAAA,OAAO,CAACN,IAAR,GAAeC,IAAf,CAAoB,YAAI;AAAClB,IAAAA,GAAG,CAACmB,OAAJ,CAAYC,KAAZ,GAAoBpB,GAAG,CAACQ,IAAJ,CAASmB,MAA7B;AAAoC1B,IAAAA,GAAG,CAACoB,IAAJ,CAAS,GAAT;AAAe,GAA5E,WACO,UAAAC,GAAG;AAAA,WAAInB,OAAO,CAAC6B,KAAR,CAAc,uBAAd,EAAsCV,GAAtC,CAAJ;AAAA,GADV;AAED,CAbD;AAeA;;AACA5B,MAAM,CAACK,GAAP,CAAW,aAAX,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACzC,MAAIqB,OAAO,GAAG,IAAIU,mBAAJ,CAAe;AAC3BC,IAAAA,KAAK,EAAGlC,GAAG,CAACQ,IAAJ,CAAS0B,KADU;AAE3BC,IAAAA,MAAM,EAAGnC,GAAG,CAACQ,IAAJ,CAAS2B,MAFS;AAG3B5B,IAAAA,GAAG,EAAGP,GAAG,CAACQ,IAAJ,CAAS4B,MAHY;AAI3BC,IAAAA,QAAQ,EAAGrC,GAAG,CAACQ,IAAJ,CAAS6B,QAJO;AAK3BC,IAAAA,QAAQ,EAAGtC,GAAG,CAACQ,IAAJ,CAAS8B,QALO;AAM3BC,IAAAA,KAAK,EAAGvC,GAAG,CAACQ,IAAJ,CAAS+B,KANU;AAO3BC,IAAAA,QAAQ,EAAGxC,GAAG,CAACQ,IAAJ,CAASgC,QAPO;AAQ3BC,IAAAA,SAAS,EAAGzC,GAAG,CAACQ,IAAJ,CAASiC,SARM;AAS3BzB,IAAAA,MAAM,EAAGhB,GAAG,CAACQ,IAAJ,CAASQ;AATS,GAAf,CAAd;AAWAO,EAAAA,OAAO,CAACN,IAAR,GAAeC,IAAf,CAAoB,YAAI;AAAElB,IAAAA,GAAG,CAACmB,OAAJ,CAAYC,KAAZ,GAAoBpB,GAAG,CAACQ,IAAJ,CAAS4B,MAA7B;AAAqCnC,IAAAA,GAAG,CAACoB,IAAJ,CAAS,GAAT;AAAe,GAA9E,WACO,UAAAC,GAAG;AAAA,WAAInB,OAAO,CAAC6B,KAAR,CAAc,uBAAd,EAAsCV,GAAtC,CAAJ;AAAA,GADV;AAED,CAdD;AAgBA;;AACA5B,MAAM,CAACK,GAAP,CAAW,UAAX,EAAsB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACtC,MAAIwC,OAAO,GAAG,IAAIC,gBAAJ,CAAY;AACxBC,IAAAA,KAAK,EAAG5C,GAAG,CAACQ,IAAJ,CAASoC,KADO;AAExBC,IAAAA,OAAO,EAAG7C,GAAG,CAACQ,IAAJ,CAASqC,OAFK;AAGxBtC,IAAAA,GAAG,EAAGP,GAAG,CAACQ,IAAJ,CAASsC,MAHS;AAIxBC,IAAAA,KAAK,EAAG/C,GAAG,CAACQ,IAAJ,CAASuC,KAJO;AAKxBC,IAAAA,MAAM,EAAGhD,GAAG,CAACQ,IAAJ,CAASwC,MALM;AAMxBC,IAAAA,QAAQ,EAAGjD,GAAG,CAACQ,IAAJ,CAASyC,QANI;AAOxBC,IAAAA,KAAK,EAAGlD,GAAG,CAACQ,IAAJ,CAAS0C,KAPO;AAQxBC,IAAAA,MAAM,EAAGnD,GAAG,CAACQ,IAAJ,CAAS2C,MARM;AASxBC,IAAAA,QAAQ,EAAGpD,GAAG,CAACQ,IAAJ,CAAS4C,QATI;AAUxBC,IAAAA,OAAO,EAAGrD,GAAG,CAACQ,IAAJ,CAAS6C,OAVK;AAWxBC,IAAAA,OAAO,EAAGtD,GAAG,CAACQ,IAAJ,CAAS8C,OAXK;AAYxBC,IAAAA,MAAM,EAAGvD,GAAG,CAACQ,IAAJ,CAAS+C,MAZM;AAaxBvC,IAAAA,MAAM,EAAGhB,GAAG,CAACQ,IAAJ,CAASQ;AAbM,GAAZ,CAAd;AAeA0B,EAAAA,OAAO,CAACzB,IAAR,GAAeC,IAAf,CAAoB,YAAI;AAAElB,IAAAA,GAAG,CAACmB,OAAJ,CAAYC,KAAZ,GAAoBpB,GAAG,CAACQ,IAAJ,CAASsC,MAA7B;AAAqC7C,IAAAA,GAAG,CAACuD,QAAJ,CAAa,YAAb;AAA4B,GAA3F,WACO,UAAAlC,GAAG;AAAA,WAAInB,OAAO,CAAC6B,KAAR,CAAc,uBAAd,EAAsCV,GAAtC,CAAJ;AAAA,GADV;AAED,CAlBD;eAoBe5B,M",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\r\nimport session from 'express-session';\r\nimport { validate } from 'email-validator';\r\nvar router = Router();\r\nimport { json, urlencoded } from 'body-parser';\r\nrouter.use(json());\r\nrouter.use(urlencoded({ extended: true }));\r\nimport { RegChem, RegDoc, RegLabChem, PatInfo } from '../src/models/InfoAll';\r\nrouter.use(session({'secret':'jay',saveUninitialized:true,resave:true}));\r\n\r\n/* Register of Doctor */\r\nrouter.all('/RegDoc',(req,res,next) => {\r\n  console.log('in the regdoc');\r\n  //if(validate(req.body.drEmail)){\r\n  let regdoc = new RegDoc({\r\n    _id : req.body.drEmail,\r\n    drName : req.body.drName,\r\n    drmobNo : req.body.drmobNo,\r\n    drPassword : req.body.drPassword,\r\n    drLicense : req.body.drLicense,\r\n    drCity : req.body.drCity,\r\n    drPincode : req.body.drPincode,\r\n    domain : req.body.domain,\r\n  });\r\n  console.log('catch it');\r\n  regdoc.save().then(()=>{ req.session.email = req.body.drEmail; res.send('1');})\r\n  .catch(err => {res.send('soni'); console.log('something going wrong',err)})\r\n  //}else{\r\n    //res.send('EmailId is not Validate');\r\n  //}\r\n});\r\n  \r\n/* Register of Chemist */\r\nrouter.all('/RegChem',(req,res,next) => {\r\n  let regchem = new RegChem({\r\n    cName : req.body.cName,\r\n    cmobNo : req.body.cmobNo,\r\n    _id : req.body.cEmail,\r\n    cAddress : req.body.cAddress,\r\n    cCity : req.body.cCity,\r\n    cPincode : req.body.cPincode,\r\n    cPassword : req.body.cPassword,\r\n    domain : req.body.domain,\r\n  });\r\n  regchem.save().then(()=>{req.session.email = req.body.cEmail;res.send('1');})\r\n  .catch(err => console.error('something going wrong',err))\r\n});\r\n  \r\n/* Register of LabChemist */\r\nrouter.all('/RegLabChem',(req,res,next) => {\r\n  let regchem = new RegLabChem({\r\n    lName : req.body.lName,\r\n    lmobNo : req.body.lmobNo,\r\n    _id : req.body.lEmail,\r\n    lLicense : req.body.lLicense,\r\n    lAddress : req.body.lAddress,\r\n    lCity : req.body.lCity,\r\n    lPincode : req.body.lPincode,\r\n    lPassword : req.body.lPassword,\r\n    domain : req.body.domain,\r\n  });\r\n  regchem.save().then(()=>{ req.session.email = req.body.lEmail; res.send('1');})\r\n  .catch(err => console.error('something going wrong',err))\r\n});\r\n\r\n/* Register of Patient */\r\nrouter.all('/patinfo',(req,res,next) => {\r\n  let patinfo = new PatInfo({\r\n    pName : req.body.pName,\r\n    pGender : req.body.pGender,\r\n    _id : req.body.pmobNo,\r\n    pDate : req.body.pDate,\r\n    pEmail : req.body.pEmail,\r\n    pAddress : req.body.pAddress,\r\n    pCity : req.body.pCity,\r\n    pState : req.body.pState,\r\n    pPincode : req.body.pPincode,\r\n    pHeight : req.body.pHeight,\r\n    pWeight : req.body.pWeight,\r\n    pBlood : req.body.pBlood,\r\n    domain : req.body.domain,\r\n  });\r\n  patinfo.save().then(()=>{ req.session.email = req.body.pmobNo; res.redirect('/jay/table');})\r\n  .catch(err => console.error('something going wrong',err))\r\n});\r\n\r\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585817035066
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/users.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar router = (0, _express.Router)();\n/* GET users listing. */\n\nrouter.get('/', function (req, res, next) {\n  res.send('respond with a resource');\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsInJlcSIsInJlcyIsIm5leHQiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0EsSUFBSUEsTUFBTSxHQUFHLHNCQUFiO0FBRUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBU0MsR0FBVCxFQUFjQyxHQUFkLEVBQW1CQyxJQUFuQixFQUF5QjtBQUN2Q0QsRUFBQUEsR0FBRyxDQUFDRSxJQUFKLENBQVMseUJBQVQ7QUFDRCxDQUZEO2VBSWVMLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvamF5L0hhY2thdGhvbl8yazIwL05vZGVKcy9Ob2RlSnNfRGVtby9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG52YXIgcm91dGVyID0gUm91dGVyKCk7XG5cbi8qIEdFVCB1c2VycyBsaXN0aW5nLiAqL1xucm91dGVyLmdldCgnLycsIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gIHJlcy5zZW5kKCdyZXNwb25kIHdpdGggYSByZXNvdXJjZScpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "get",
        "req",
        "res",
        "next",
        "send"
      ],
      "mappings": ";;;;;;;AAAA;;AACA,IAAIA,MAAM,GAAG,sBAAb;AAEA;;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACvCD,EAAAA,GAAG,CAACE,IAAJ,CAAS,yBAAT;AACD,CAFD;eAIeL,M",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\nvar router = Router();\n\n/* GET users listing. */\nrouter.get('/', function(req, res, next) {\n  res.send('respond with a resource');\n});\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1585808520798
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/history.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/history.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/history.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/history.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
        "sourceFileName": "history.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongoose = require(\"mongoose\");\n\n(0, _mongoose.connect)('mongodb://localhost:27017/Information', {\n  useNewUrlParser: true\n}).then(function () {\n  console.log('Now connected to MongoDB');\n})[\"catch\"](function (err) {\n  return console.error('something going wrong', err);\n});\nvar SubHistory = new _mongoose.Schema({\n  _id: false,\n  diseases: String,\n  medicine: String,\n  consaltant: String\n});\nvar HistorySchema = new _mongoose.Schema({\n  _id: String,\n  history: [{\n    _id: false,\n    diseases: String,\n    medicine: String,\n    consaltant: String\n  }]\n});\nvar Pati_History = (0, _mongoose.model)('Pati_History', HistorySchema);\nvar _default = {\n  Pati_History: Pati_History\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhpc3RvcnkuanMiXSwibmFtZXMiOlsidXNlTmV3VXJsUGFyc2VyIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJlcnJvciIsIlN1Ykhpc3RvcnkiLCJTY2hlbWEiLCJfaWQiLCJkaXNlYXNlcyIsIlN0cmluZyIsIm1lZGljaW5lIiwiY29uc2FsdGFudCIsIkhpc3RvcnlTY2hlbWEiLCJoaXN0b3J5IiwiUGF0aV9IaXN0b3J5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBRUEsdUJBQVEsdUNBQVIsRUFBZ0Q7QUFBRUEsRUFBQUEsZUFBZSxFQUFFO0FBQW5CLENBQWhELEVBQTJFQyxJQUEzRSxDQUFnRixZQUFJO0FBQUNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBCQUFaO0FBQXlDLENBQTlILFdBQXNJLFVBQUFDLEdBQUc7QUFBQSxTQUFJRixPQUFPLENBQUNHLEtBQVIsQ0FBYyx1QkFBZCxFQUFzQ0QsR0FBdEMsQ0FBSjtBQUFBLENBQXpJO0FBR0EsSUFBTUUsVUFBVSxHQUFHLElBQUlDLGdCQUFKLENBQVc7QUFDMUJDLEVBQUFBLEdBQUcsRUFBRyxLQURvQjtBQUUxQkMsRUFBQUEsUUFBUSxFQUFHQyxNQUZlO0FBRzFCQyxFQUFBQSxRQUFRLEVBQUdELE1BSGU7QUFJMUJFLEVBQUFBLFVBQVUsRUFBR0Y7QUFKYSxDQUFYLENBQW5CO0FBUUEsSUFBTUcsYUFBYSxHQUFHLElBQUlOLGdCQUFKLENBQVc7QUFDN0JDLEVBQUFBLEdBQUcsRUFBR0UsTUFEdUI7QUFFN0JJLEVBQUFBLE9BQU8sRUFBRyxDQUFDO0FBQ1BOLElBQUFBLEdBQUcsRUFBRyxLQURDO0FBRVBDLElBQUFBLFFBQVEsRUFBR0MsTUFGSjtBQUdQQyxJQUFBQSxRQUFRLEVBQUdELE1BSEo7QUFJUEUsSUFBQUEsVUFBVSxFQUFHRjtBQUpOLEdBQUQ7QUFGbUIsQ0FBWCxDQUF0QjtBQVdBLElBQU1LLFlBQVksR0FBRyxxQkFBTSxjQUFOLEVBQXFCRixhQUFyQixDQUFyQjtlQUVlO0FBQUNFLEVBQUFBLFlBQVksRUFBWkE7QUFBRCxDIiwic291cmNlUm9vdCI6Ii9ob21lL2pheS9IYWNrYXRob25fMmsyMC9Ob2RlSnMvTm9kZUpzX0RlbW8vc3JjL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25uZWN0LCBTY2hlbWEsIG1vZGVsIH0gZnJvbSAnbW9uZ29vc2UnO1xyXG5cclxuY29ubmVjdCgnbW9uZ29kYjovL2xvY2FsaG9zdDoyNzAxNy9JbmZvcm1hdGlvbicseyB1c2VOZXdVcmxQYXJzZXI6IHRydWUgfSkudGhlbigoKT0+e2NvbnNvbGUubG9nKCdOb3cgY29ubmVjdGVkIHRvIE1vbmdvREInKTt9KS5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcignc29tZXRoaW5nIGdvaW5nIHdyb25nJyxlcnIpKTtcclxuXHJcblxyXG5jb25zdCBTdWJIaXN0b3J5ID0gbmV3IFNjaGVtYSh7XHJcbiAgICBfaWQgOiBmYWxzZSxcclxuICAgIGRpc2Vhc2VzIDogU3RyaW5nLFxyXG4gICAgbWVkaWNpbmUgOiBTdHJpbmcsXHJcbiAgICBjb25zYWx0YW50IDogU3RyaW5nXHJcbn0pO1xyXG5cclxuXHJcbmNvbnN0IEhpc3RvcnlTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIF9pZCA6IFN0cmluZyxcclxuICAgIGhpc3RvcnkgOiBbe1xyXG4gICAgICAgIF9pZCA6IGZhbHNlLFxyXG4gICAgICAgIGRpc2Vhc2VzIDogU3RyaW5nLFxyXG4gICAgICAgIG1lZGljaW5lIDogU3RyaW5nLFxyXG4gICAgICAgIGNvbnNhbHRhbnQgOiBTdHJpbmdcclxuICAgIH1dXHJcbn0pO1xyXG5cclxuXHJcbmNvbnN0IFBhdGlfSGlzdG9yeSA9IG1vZGVsKCdQYXRpX0hpc3RvcnknLEhpc3RvcnlTY2hlbWEpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQge1BhdGlfSGlzdG9yeX07Il19",
    "map": {
      "version": 3,
      "sources": [
        "history.js"
      ],
      "names": [
        "useNewUrlParser",
        "then",
        "console",
        "log",
        "err",
        "error",
        "SubHistory",
        "Schema",
        "_id",
        "diseases",
        "String",
        "medicine",
        "consaltant",
        "HistorySchema",
        "history",
        "Pati_History"
      ],
      "mappings": ";;;;;;;AAAA;;AAEA,uBAAQ,uCAAR,EAAgD;AAAEA,EAAAA,eAAe,EAAE;AAAnB,CAAhD,EAA2EC,IAA3E,CAAgF,YAAI;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AAAyC,CAA9H,WAAsI,UAAAC,GAAG;AAAA,SAAIF,OAAO,CAACG,KAAR,CAAc,uBAAd,EAAsCD,GAAtC,CAAJ;AAAA,CAAzI;AAGA,IAAME,UAAU,GAAG,IAAIC,gBAAJ,CAAW;AAC1BC,EAAAA,GAAG,EAAG,KADoB;AAE1BC,EAAAA,QAAQ,EAAGC,MAFe;AAG1BC,EAAAA,QAAQ,EAAGD,MAHe;AAI1BE,EAAAA,UAAU,EAAGF;AAJa,CAAX,CAAnB;AAQA,IAAMG,aAAa,GAAG,IAAIN,gBAAJ,CAAW;AAC7BC,EAAAA,GAAG,EAAGE,MADuB;AAE7BI,EAAAA,OAAO,EAAG,CAAC;AACPN,IAAAA,GAAG,EAAG,KADC;AAEPC,IAAAA,QAAQ,EAAGC,MAFJ;AAGPC,IAAAA,QAAQ,EAAGD,MAHJ;AAIPE,IAAAA,UAAU,EAAGF;AAJN,GAAD;AAFmB,CAAX,CAAtB;AAWA,IAAMK,YAAY,GAAG,qBAAM,cAAN,EAAqBF,aAArB,CAArB;eAEe;AAACE,EAAAA,YAAY,EAAZA;AAAD,C",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/src/models/",
      "sourcesContent": [
        "import { connect, Schema, model } from 'mongoose';\r\n\r\nconnect('mongodb://localhost:27017/Information',{ useNewUrlParser: true }).then(()=>{console.log('Now connected to MongoDB');}).catch(err => console.error('something going wrong',err));\r\n\r\n\r\nconst SubHistory = new Schema({\r\n    _id : false,\r\n    diseases : String,\r\n    medicine : String,\r\n    consaltant : String\r\n});\r\n\r\n\r\nconst HistorySchema = new Schema({\r\n    _id : String,\r\n    history : [{\r\n        _id : false,\r\n        diseases : String,\r\n        medicine : String,\r\n        consaltant : String\r\n    }]\r\n});\r\n\r\n\r\nconst Pati_History = model('Pati_History',HistorySchema);\r\n\r\nexport default {Pati_History};"
      ]
    },
    "sourceType": "script",
    "mtime": 1585815066867
  },
  "{\"sourceRoot\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"filename\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/add.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.9.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/add.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/add.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/add.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
        "sourceFileName": "add.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _history = require(\"../src/models/history.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = (0, _express.Router)();\nrouter.all('/AddHistory', function (req, res, next) {\n  console.log(req.body.add_dis);\n  console.log(req.body.add_med);\n  console.log(req.body.add_con);\n  var his = new _history.Pati_History({\n    _id: '9426980359',\n    history: [{\n      diseases: req.body.add_dis.toString(),\n      medicine: req.body.add_med.toString(),\n      consaltant: req.body.add_con.toString()\n    }]\n  });\n  var one = his.save().then(function () {\n    req.session.email = '9426980359';\n    res.redirect('/jay/history');\n  })[\"catch\"](function () {\n    req.session.email = '9426980359';\n    console.log('in catch');\n\n    _history.Pati_History.findOne({\n      _id: '9426980359'\n    }, function (err, pat) {\n      pat.history.push({\n        diseases: req.body.add_dis.toString(),\n        medicine: req.body.add_med.toString(),\n        consaltant: req.body.add_con.toString()\n      });\n      pat.save();\n    });\n\n    res.redirect('/jay/history');\n  });\n});\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJhbGwiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsImJvZHkiLCJhZGRfZGlzIiwiYWRkX21lZCIsImFkZF9jb24iLCJoaXMiLCJQYXRpX0hpc3RvcnkiLCJfaWQiLCJoaXN0b3J5IiwiZGlzZWFzZXMiLCJ0b1N0cmluZyIsIm1lZGljaW5lIiwiY29uc2FsdGFudCIsIm9uZSIsInNhdmUiLCJ0aGVuIiwic2Vzc2lvbiIsImVtYWlsIiwicmVkaXJlY3QiLCJmaW5kT25lIiwiZXJyIiwicGF0IiwicHVzaCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOzs7O0FBRkEsSUFBSUEsTUFBTSxHQUFHLHNCQUFiO0FBSUFBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGFBQVgsRUFBeUIsVUFBQ0MsR0FBRCxFQUFLQyxHQUFMLEVBQVNDLElBQVQsRUFBZ0I7QUFDckNDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixHQUFHLENBQUNLLElBQUosQ0FBU0MsT0FBckI7QUFDQUgsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlKLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRSxPQUFyQjtBQUNBSixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosR0FBRyxDQUFDSyxJQUFKLENBQVNHLE9BQXJCO0FBQ0EsTUFBSUMsR0FBRyxHQUFHLElBQUlDLHFCQUFKLENBQWlCO0FBQ3ZCQyxJQUFBQSxHQUFHLEVBQUcsWUFEaUI7QUFFdkJDLElBQUFBLE9BQU8sRUFBRyxDQUFDO0FBQ1BDLE1BQUFBLFFBQVEsRUFBR2IsR0FBRyxDQUFDSyxJQUFKLENBQVNDLE9BQVQsQ0FBaUJRLFFBQWpCLEVBREo7QUFFUEMsTUFBQUEsUUFBUSxFQUFHZixHQUFHLENBQUNLLElBQUosQ0FBU0UsT0FBVCxDQUFpQk8sUUFBakIsRUFGSjtBQUdQRSxNQUFBQSxVQUFVLEVBQUdoQixHQUFHLENBQUNLLElBQUosQ0FBU0csT0FBVCxDQUFpQk0sUUFBakI7QUFITixLQUFEO0FBRmEsR0FBakIsQ0FBVjtBQVFBLE1BQU1HLEdBQUcsR0FBR1IsR0FBRyxDQUFDUyxJQUFKLEdBQVdDLElBQVgsQ0FBZ0IsWUFBSTtBQUFFbkIsSUFBQUEsR0FBRyxDQUFDb0IsT0FBSixDQUFZQyxLQUFaLEdBQW9CLFlBQXBCO0FBQWtDcEIsSUFBQUEsR0FBRyxDQUFDcUIsUUFBSixDQUFhLGNBQWI7QUFBOEIsR0FBdEYsV0FDSixZQUFNO0FBQ1Z0QixJQUFBQSxHQUFHLENBQUNvQixPQUFKLENBQVlDLEtBQVosR0FBb0IsWUFBcEI7QUFDQWxCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFVBQVo7O0FBQ0FNLDBCQUFhYSxPQUFiLENBQXFCO0FBQUNaLE1BQUFBLEdBQUcsRUFBRztBQUFQLEtBQXJCLEVBQTBDLFVBQUNhLEdBQUQsRUFBS0MsR0FBTCxFQUFXO0FBQ2pEQSxNQUFBQSxHQUFHLENBQUNiLE9BQUosQ0FBWWMsSUFBWixDQUFpQjtBQUNiYixRQUFBQSxRQUFRLEVBQUdiLEdBQUcsQ0FBQ0ssSUFBSixDQUFTQyxPQUFULENBQWlCUSxRQUFqQixFQURFO0FBRWJDLFFBQUFBLFFBQVEsRUFBR2YsR0FBRyxDQUFDSyxJQUFKLENBQVNFLE9BQVQsQ0FBaUJPLFFBQWpCLEVBRkU7QUFHYkUsUUFBQUEsVUFBVSxFQUFFaEIsR0FBRyxDQUFDSyxJQUFKLENBQVNHLE9BQVQsQ0FBaUJNLFFBQWpCO0FBSEMsT0FBakI7QUFLQVcsTUFBQUEsR0FBRyxDQUFDUCxJQUFKO0FBQ0gsS0FQRDs7QUFRQWpCLElBQUFBLEdBQUcsQ0FBQ3FCLFFBQUosQ0FBYSxjQUFiO0FBQ0gsR0FiVyxDQUFaO0FBY0gsQ0ExQkQ7ZUE2QmV4QixNIiwic291cmNlUm9vdCI6Ii9ob21lL2pheS9IYWNrYXRob25fMmsyMC9Ob2RlSnMvTm9kZUpzX0RlbW8vcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcbnZhciByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCB7IFBhdGlfSGlzdG9yeSB9IGZyb20gJy4uL3NyYy9tb2RlbHMvaGlzdG9yeS5qcyc7XG5cbnJvdXRlci5hbGwoJy9BZGRIaXN0b3J5JywocmVxLHJlcyxuZXh0KT0+e1xuICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5LmFkZF9kaXMpO1xuICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5LmFkZF9tZWQpO1xuICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5LmFkZF9jb24pO1xuICAgIGxldCBoaXMgPSBuZXcgUGF0aV9IaXN0b3J5KHtcbiAgICAgICAgX2lkIDogJzk0MjY5ODAzNTknLFxuICAgICAgICBoaXN0b3J5IDogW3tcbiAgICAgICAgICAgIGRpc2Vhc2VzIDogcmVxLmJvZHkuYWRkX2Rpcy50b1N0cmluZygpLFxuICAgICAgICAgICAgbWVkaWNpbmUgOiByZXEuYm9keS5hZGRfbWVkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICBjb25zYWx0YW50IDogcmVxLmJvZHkuYWRkX2Nvbi50b1N0cmluZygpXG4gICAgICAgIH1dXG4gICAgfSk7XG4gICAgY29uc3Qgb25lID0gaGlzLnNhdmUoKS50aGVuKCgpPT57IHJlcS5zZXNzaW9uLmVtYWlsID0gJzk0MjY5ODAzNTknOyByZXMucmVkaXJlY3QoJy9qYXkvaGlzdG9yeScpO30pXG4gICAgLmNhdGNoKCAoKSA9PiB7XG4gICAgICAgIHJlcS5zZXNzaW9uLmVtYWlsID0gJzk0MjY5ODAzNTknO1xuICAgICAgICBjb25zb2xlLmxvZygnaW4gY2F0Y2gnKTtcbiAgICAgICAgUGF0aV9IaXN0b3J5LmZpbmRPbmUoe19pZCA6ICc5NDI2OTgwMzU5J30sKGVycixwYXQpPT57XG4gICAgICAgICAgICBwYXQuaGlzdG9yeS5wdXNoKHtcbiAgICAgICAgICAgICAgICBkaXNlYXNlcyA6IHJlcS5ib2R5LmFkZF9kaXMudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBtZWRpY2luZSA6IHJlcS5ib2R5LmFkZF9tZWQudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICBjb25zYWx0YW50IDpyZXEuYm9keS5hZGRfY29uLnRvU3RyaW5nKClcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcGF0LnNhdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJlcy5yZWRpcmVjdCgnL2pheS9oaXN0b3J5Jyk7ICAgICAgICAgICAgXG4gICAgfSk7XG59KTtcblxuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "add.js"
      ],
      "names": [
        "router",
        "all",
        "req",
        "res",
        "next",
        "console",
        "log",
        "body",
        "add_dis",
        "add_med",
        "add_con",
        "his",
        "Pati_History",
        "_id",
        "history",
        "diseases",
        "toString",
        "medicine",
        "consaltant",
        "one",
        "save",
        "then",
        "session",
        "email",
        "redirect",
        "findOne",
        "err",
        "pat",
        "push"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAFA,IAAIA,MAAM,GAAG,sBAAb;AAIAA,MAAM,CAACC,GAAP,CAAW,aAAX,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAgB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASC,OAArB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASE,OAArB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,CAASG,OAArB;AACA,MAAIC,GAAG,GAAG,IAAIC,qBAAJ,CAAiB;AACvBC,IAAAA,GAAG,EAAG,YADiB;AAEvBC,IAAAA,OAAO,EAAG,CAAC;AACPC,MAAAA,QAAQ,EAAGb,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBQ,QAAjB,EADJ;AAEPC,MAAAA,QAAQ,EAAGf,GAAG,CAACK,IAAJ,CAASE,OAAT,CAAiBO,QAAjB,EAFJ;AAGPE,MAAAA,UAAU,EAAGhB,GAAG,CAACK,IAAJ,CAASG,OAAT,CAAiBM,QAAjB;AAHN,KAAD;AAFa,GAAjB,CAAV;AAQA,MAAMG,GAAG,GAAGR,GAAG,CAACS,IAAJ,GAAWC,IAAX,CAAgB,YAAI;AAAEnB,IAAAA,GAAG,CAACoB,OAAJ,CAAYC,KAAZ,GAAoB,YAApB;AAAkCpB,IAAAA,GAAG,CAACqB,QAAJ,CAAa,cAAb;AAA8B,GAAtF,WACJ,YAAM;AACVtB,IAAAA,GAAG,CAACoB,OAAJ,CAAYC,KAAZ,GAAoB,YAApB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACAM,0BAAaa,OAAb,CAAqB;AAACZ,MAAAA,GAAG,EAAG;AAAP,KAArB,EAA0C,UAACa,GAAD,EAAKC,GAAL,EAAW;AACjDA,MAAAA,GAAG,CAACb,OAAJ,CAAYc,IAAZ,CAAiB;AACbb,QAAAA,QAAQ,EAAGb,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAiBQ,QAAjB,EADE;AAEbC,QAAAA,QAAQ,EAAGf,GAAG,CAACK,IAAJ,CAASE,OAAT,CAAiBO,QAAjB,EAFE;AAGbE,QAAAA,UAAU,EAAEhB,GAAG,CAACK,IAAJ,CAASG,OAAT,CAAiBM,QAAjB;AAHC,OAAjB;AAKAW,MAAAA,GAAG,CAACP,IAAJ;AACH,KAPD;;AAQAjB,IAAAA,GAAG,CAACqB,QAAJ,CAAa,cAAb;AACH,GAbW,CAAZ;AAcH,CA1BD;eA6BexB,M",
      "sourceRoot": "/home/jay/Hackathon_2k20/NodeJs/NodeJs_Demo/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\nimport session from 'express-session';\nvar router = Router();\nimport bodyParser from 'body-parser';\nimport { Pati_History } from '../src/models/history.js';\n\nrouter.all('/AddHistory',(req,res,next)=>{\n    console.log(req.body.add_dis);\n    console.log(req.body.add_med);\n    console.log(req.body.add_con);\n    let his = new Pati_History({\n        _id : '9426980359',\n        history : [{\n            diseases : req.body.add_dis.toString(),\n            medicine : req.body.add_med.toString(),\n            consaltant : req.body.add_con.toString()\n        }]\n    });\n    const one = his.save().then(()=>{ req.session.email = '9426980359'; res.redirect('/jay/history');})\n    .catch( () => {\n        req.session.email = '9426980359';\n        console.log('in catch');\n        Pati_History.findOne({_id : '9426980359'},(err,pat)=>{\n            pat.history.push({\n                diseases : req.body.add_dis.toString(),\n                medicine : req.body.add_med.toString(),\n                consaltant :req.body.add_con.toString()\n            });\n            pat.save();\n        });\n        res.redirect('/jay/history');            \n    });\n});\n\n\nexport default router;"
      ]
    },
    "sourceType": "script",
    "mtime": 1585813740188
  }
}